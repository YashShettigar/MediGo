/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package classes;

import java.awt.Color;
import java.util.Random;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.border.BevelBorder;
import javax.swing.border.Border;
import javax.swing.border.SoftBevelBorder;
import Codewind.Send;
import java.awt.Font;
import java.awt.print.PageFormat;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Timer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Yash
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form SignUp_form
     */
    public int number;
    private String userID = "";
    Color gray = Color.decode("#999999");
    public Home() {
        initComponents();
        custTable.getTableHeader().setDefaultRenderer(new TableHeaderFont());
        custTable.setShowGrid(true);
        custTable.setGridColor(Color.BLACK);
        dealersTable.getTableHeader().setDefaultRenderer(new TableHeaderFont());
        dealersTable.setShowGrid(true);
        dealersTable.setGridColor(Color.BLACK);
        purchaseMedTable.getTableHeader().setDefaultRenderer(new TableHeaderFont());
        purchaseMedTable.setShowGrid(true);
        purchaseMedTable.setGridColor(Color.BLACK);
        soldMedTable.getTableHeader().setDefaultRenderer(new TableHeaderFont());
        soldMedTable.setShowGrid(true);
        soldMedTable.setGridColor(Color.BLACK);
        availableMedTable.getTableHeader().setDefaultRenderer(new TableHeaderFont());
        availableMedTable.setShowGrid(true);
        availableMedTable.setGridColor(Color.BLACK);
        purchaseGSTTable.getTableHeader().setDefaultRenderer(new TableHeaderFont());
        purchaseGSTTable.setShowGrid(true);
        purchaseGSTTable.setGridColor(Color.BLACK);
        soldGSTTable.getTableHeader().setDefaultRenderer(new TableHeaderFont());
        soldGSTTable.setShowGrid(true);
        soldGSTTable.setGridColor(Color.BLACK);
    }
    
    public Home(String s) {
        initComponents();
        custTable.getTableHeader().setDefaultRenderer(new TableHeaderFont());
        custTable.setShowGrid(true);
        custTable.setGridColor(Color.BLACK);
        dealersTable.getTableHeader().setDefaultRenderer(new TableHeaderFont());
        dealersTable.setShowGrid(true);
        dealersTable.setGridColor(Color.BLACK);
        purchaseMedTable.getTableHeader().setDefaultRenderer(new TableHeaderFont());
        purchaseMedTable.setShowGrid(true);
        purchaseMedTable.setGridColor(Color.BLACK);
        soldMedTable.getTableHeader().setDefaultRenderer(new TableHeaderFont());
        soldMedTable.setShowGrid(true);
        soldMedTable.setGridColor(Color.BLACK);
        availableMedTable.getTableHeader().setDefaultRenderer(new TableHeaderFont());
        availableMedTable.setShowGrid(true);
        availableMedTable.setGridColor(Color.BLACK);
        purchaseGSTTable.getTableHeader().setDefaultRenderer(new TableHeaderFont());
        purchaseGSTTable.setShowGrid(true);
        purchaseGSTTable.setGridColor(Color.BLACK);
        soldGSTTable.getTableHeader().setDefaultRenderer(new TableHeaderFont());
        soldGSTTable.setShowGrid(true);
        soldGSTTable.setGridColor(Color.BLACK);
        userID = s;
    }
    String filterVar = "";
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        HomePanel = new javax.swing.JPanel();
        AddMedicinePanel = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        medName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        medGroup = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        medUnit2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        medCo = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        SellMedicinePanel = new javax.swing.JPanel();
        jTextField3 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        medGroup1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        medQuantity1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        medCo1 = new javax.swing.JTextField();
        medName1 = new javax.swing.JComboBox<>();
        medUnit = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        custName = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        mobNo = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        mrpText = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        GST = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        grandTotal = new javax.swing.JTextField();
        buttonContainer = new javax.swing.JPanel();
        billGenBtn = new javax.swing.JButton();
        clrListBtn = new javax.swing.JButton();
        PurchaseMedicinePanel = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        jPanel17 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        medGroup2 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        medQuantity2 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        medCo2 = new javax.swing.JTextField();
        medName2 = new javax.swing.JComboBox<>();
        medUnit1 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        dealerName = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        dealerMobNo = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        mrpText1 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        GST1 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        grandTotal1 = new javax.swing.JTextField();
        submitPurchase = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        SPText = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        exclInvoice = new javax.swing.JTextField();
        dealerGST = new javax.swing.JTextField();
        expDate = new datechooser.beans.DateChooserCombo();
        AddCustomerPanel = new javax.swing.JPanel();
        jTextField5 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        custMobNo = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        custName1 = new javax.swing.JTextField();
        addCustBtn = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        custAddr = new javax.swing.JTextArea();
        ShowCustomerPanel = new javax.swing.JPanel();
        jTextField6 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        searchEditorText = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jTextField8 = new javax.swing.JTextField();
        custFilter = new javax.swing.JComboBox<>();
        showCustBtn = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        custTable = new javax.swing.JTable();
        jPanel19 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        AddDealerPanel = new javax.swing.JPanel();
        jTextField7 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        dafadf = new javax.swing.JLabel();
        dealerName1 = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        dealerMobNo1 = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        dealerGST1 = new javax.swing.JTextField();
        addDealerButton = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        dealerAddr1 = new javax.swing.JTextArea();
        ShowDealerPanel = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        searchDealerText = new javax.swing.JTextField();
        jPanel21 = new javax.swing.JPanel();
        jTextField15 = new javax.swing.JTextField();
        dealerFilter = new javax.swing.JComboBox<>();
        showDealerBtn = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        dealersTable = new javax.swing.JTable();
        jPanel22 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        AvailableMedicinePanel = new javax.swing.JPanel();
        jTextField10 = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jTextField16 = new javax.swing.JTextField();
        aMedFilter = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        availableMedTable = new javax.swing.JTable();
        jPanel24 = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        searchAMedText = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        PurchasedMedicinePanel = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jTextField17 = new javax.swing.JTextField();
        pMedFilter = new javax.swing.JComboBox<>();
        jPanel26 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        searchPMedText = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        purchaseMedTable = new javax.swing.JTable();
        SoldMedicinePanel = new javax.swing.JPanel();
        jTextField12 = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jTextField19 = new javax.swing.JTextField();
        sMedFilter = new javax.swing.JComboBox<>();
        jPanel32 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        searchSMedText2 = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        soldMedTable = new javax.swing.JTable();
        PurchasedGSTPanel = new javax.swing.JPanel();
        jTextField13 = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jTextField20 = new javax.swing.JTextField();
        PGFilter = new javax.swing.JComboBox<>();
        jPanel35 = new javax.swing.JPanel();
        jPanel36 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        PGSearchText = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        purchaseGSTTable = new javax.swing.JTable();
        jPanel39 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        orgName1 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        orgAddr1 = new javax.swing.JTextArea();
        orgContact1 = new javax.swing.JLabel();
        orgGST1 = new javax.swing.JLabel();
        printPurchaseGSTBtn = new javax.swing.JButton();
        SoldGSTPanel = new javax.swing.JPanel();
        jTextField14 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jPanel37 = new javax.swing.JPanel();
        jTextField21 = new javax.swing.JTextField();
        SGFilter = new javax.swing.JComboBox<>();
        jPanel38 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        soldGSTTable = new javax.swing.JTable();
        jPanel29 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        SGSearchText = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        orgName2 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        orgAddr2 = new javax.swing.JTextArea();
        orgContact2 = new javax.swing.JLabel();
        orgGST2 = new javax.swing.JLabel();
        printSoldGSTBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(new java.awt.Color(248, 30, 154));
        jPanel2.setMinimumSize(new java.awt.Dimension(1920, 140));
        jPanel2.setPreferredSize(new java.awt.Dimension(1920, 140));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(248, 30, 154));
        jTextField1.setFont(new java.awt.Font("Liberation Sans", 1, 55)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("MediGo");
        jTextField1.setBorder(null);
        jPanel2.add(jTextField1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setMinimumSize(new java.awt.Dimension(1920, 940));
        jPanel3.setPreferredSize(new java.awt.Dimension(1920, 940));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        HomePanel.setBackground(new java.awt.Color(255, 255, 255));
        HomePanel.setLayout(new java.awt.CardLayout());

        AddMedicinePanel.setBackground(new java.awt.Color(255, 255, 255));
        AddMedicinePanel.setLayout(new java.awt.GridBagLayout());

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(255, 255, 255));
        jTextField2.setFont(new java.awt.Font("Rubik", 1, 35)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(248, 30, 154));
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setText("Add Medicine Panel");
        jTextField2.setBorder(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        AddMedicinePanel.add(jTextField2, gridBagConstraints);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(248, 30, 154));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Medicine Name");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(100, 0, 20, 0);
        jPanel4.add(jLabel1, gridBagConstraints);

        medName.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        medName.setForeground(new java.awt.Color(153, 153, 153));
        medName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        medName.setText("Enter medicine name here");
        medName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        medName.setPreferredSize(new java.awt.Dimension(400, 40));
        medName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                medNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                medNameFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(100, 0, 20, 0);
        jPanel4.add(medName, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(248, 30, 154));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Medicine Group");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel4.add(jLabel2, gridBagConstraints);

        medGroup.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        medGroup.setForeground(new java.awt.Color(153, 153, 153));
        medGroup.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        medGroup.setText("Enter group name here");
        medGroup.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        medGroup.setPreferredSize(new java.awt.Dimension(400, 40));
        medGroup.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                medGroupFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                medGroupFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel4.add(medGroup, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(248, 30, 154));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Medicine Unit No.");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel4.add(jLabel3, gridBagConstraints);

        medUnit2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        medUnit2.setForeground(new java.awt.Color(153, 153, 153));
        medUnit2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        medUnit2.setText("Enter unit number here");
        medUnit2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        medUnit2.setPreferredSize(new java.awt.Dimension(400, 40));
        medUnit2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                medUnit2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                medUnit2FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel4.add(medUnit2, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(248, 30, 154));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Medicine Company");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel4.add(jLabel4, gridBagConstraints);

        medCo.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        medCo.setForeground(new java.awt.Color(153, 153, 153));
        medCo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        medCo.setText("Enter company name here");
        medCo.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        medCo.setPreferredSize(new java.awt.Dimension(400, 40));
        medCo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                medCoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                medCoFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel4.add(medCo, gridBagConstraints);

        jButton1.setBackground(new java.awt.Color(248, 30, 154));
        jButton1.setFont(new java.awt.Font("Segoe UI Black", 0, 20)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Add");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setContentAreaFilled(false);
        jButton1.setOpaque(true);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 0, -20);
        jPanel4.add(jButton1, gridBagConstraints);

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jPanel16, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 14.0;
        AddMedicinePanel.add(jPanel4, gridBagConstraints);

        HomePanel.add(AddMedicinePanel, "card2");

        SellMedicinePanel.setBackground(new java.awt.Color(255, 255, 255));
        SellMedicinePanel.setLayout(new java.awt.GridBagLayout());

        jTextField3.setEditable(false);
        jTextField3.setBackground(new java.awt.Color(255, 255, 255));
        jTextField3.setFont(new java.awt.Font("Rubik", 1, 35)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(248, 30, 154));
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.setText("Sell Medicine Panel");
        jTextField3.setBorder(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        SellMedicinePanel.add(jTextField3, gridBagConstraints);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(248, 30, 154));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Medicine Name");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel5.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 20, 0);
        jPanel5.add(jLabel5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(248, 30, 154));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Medicine Group");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel6.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 20, 0);
        jPanel5.add(jLabel6, gridBagConstraints);

        medGroup1.setEditable(false);
        medGroup1.setBackground(new java.awt.Color(255, 255, 255));
        medGroup1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        medGroup1.setForeground(new java.awt.Color(153, 153, 153));
        medGroup1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        medGroup1.setText("Select a medicine name");
        medGroup1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        medGroup1.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 20, 0);
        jPanel5.add(medGroup1, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(248, 30, 154));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Medicine Quantity");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel7.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel5.add(jLabel7, gridBagConstraints);

        medQuantity1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        medQuantity1.setForeground(new java.awt.Color(153, 153, 153));
        medQuantity1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        medQuantity1.setText("Enter quantity(number) here");
        medQuantity1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        medQuantity1.setPreferredSize(new java.awt.Dimension(350, 35));
        medQuantity1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                medQuantity1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                medQuantity1FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel5.add(medQuantity1, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(248, 30, 154));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Medicine Company");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel8.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel5.add(jLabel8, gridBagConstraints);

        medCo1.setEditable(false);
        medCo1.setBackground(new java.awt.Color(255, 255, 255));
        medCo1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        medCo1.setForeground(new java.awt.Color(153, 153, 153));
        medCo1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        medCo1.setText("Select a medicine name");
        medCo1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        medCo1.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel5.add(medCo1, gridBagConstraints);

        medName1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 26)); // NOI18N
        medName1.setForeground(new java.awt.Color(153, 153, 153));
        medName1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        medName1.setBorder(null);
        medName1.setPreferredSize(new java.awt.Dimension(350, 35));
        medName1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                medName1ItemStateChanged(evt);
            }
        });
        medName1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                medName1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                medName1MouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 20, 0);
        jPanel5.add(medName1, gridBagConstraints);

        medUnit.setEditable(false);
        medUnit.setBackground(new java.awt.Color(255, 255, 255));
        medUnit.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        medUnit.setForeground(new java.awt.Color(153, 153, 153));
        medUnit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        medUnit.setText("Select a medicine name");
        medUnit.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        medUnit.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel5.add(medUnit, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(248, 30, 154));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Medicine Unit");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel9.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel5.add(jLabel9, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(248, 30, 154));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Customer Name");
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel10.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 20, 0);
        jPanel5.add(jLabel10, gridBagConstraints);

        custName.setFont(new java.awt.Font("Segoe UI Semibold", 0, 26)); // NOI18N
        custName.setForeground(new java.awt.Color(153, 153, 153));
        custName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        custName.setBorder(null);
        custName.setPreferredSize(new java.awt.Dimension(350, 35));
        custName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                custNameItemStateChanged(evt);
            }
        });
        custName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                custNameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                custNameMouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 20, 0);
        jPanel5.add(custName, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(248, 30, 154));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Contact Number");
        jLabel11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel11.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel5.add(jLabel11, gridBagConstraints);

        mobNo.setEditable(false);
        mobNo.setBackground(new java.awt.Color(255, 255, 255));
        mobNo.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        mobNo.setForeground(new java.awt.Color(153, 153, 153));
        mobNo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mobNo.setText("Select a customer name");
        mobNo.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        mobNo.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel5.add(mobNo, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(248, 30, 154));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Medicine MRP");
        jLabel12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel12.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel5.add(jLabel12, gridBagConstraints);

        mrpText.setEditable(false);
        mrpText.setBackground(new java.awt.Color(255, 255, 255));
        mrpText.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        mrpText.setForeground(new java.awt.Color(153, 153, 153));
        mrpText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mrpText.setText("Select a medicine name");
        mrpText.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        mrpText.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel5.add(mrpText, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(248, 30, 154));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("GST");
        jLabel13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel13.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 20, 0);
        jPanel5.add(jLabel13, gridBagConstraints);

        GST.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        GST.setForeground(new java.awt.Color(153, 153, 153));
        GST.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        GST.setText("Enter GST in % here");
        GST.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        GST.setPreferredSize(new java.awt.Dimension(350, 35));
        GST.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                GSTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                GSTFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 20, 0);
        jPanel5.add(GST, gridBagConstraints);

        jLabel14.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(248, 30, 154));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Grand Total");
        jLabel14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel14.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel5.add(jLabel14, gridBagConstraints);

        grandTotal.setEditable(false);
        grandTotal.setBackground(new java.awt.Color(255, 255, 255));
        grandTotal.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        grandTotal.setForeground(new java.awt.Color(153, 153, 153));
        grandTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        grandTotal.setText("MRP(incl.)");
        grandTotal.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        grandTotal.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel5.add(grandTotal, gridBagConstraints);

        buttonContainer.setBackground(new java.awt.Color(255, 255, 255));
        buttonContainer.setPreferredSize(new java.awt.Dimension(180, 150));
        buttonContainer.setLayout(new java.awt.GridBagLayout());

        billGenBtn.setBackground(new java.awt.Color(248, 30, 154));
        billGenBtn.setFont(new java.awt.Font("Segoe UI Black", 0, 20)); // NOI18N
        billGenBtn.setForeground(new java.awt.Color(255, 255, 255));
        billGenBtn.setText("Add +");
        billGenBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        billGenBtn.setContentAreaFilled(false);
        billGenBtn.setOpaque(true);
        billGenBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billGenBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                billGenBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                billGenBtnMouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 10;
        buttonContainer.add(billGenBtn, gridBagConstraints);
        billGenBtn.getAccessibleContext().setAccessibleParent(buttonContainer);

        clrListBtn.setBackground(new java.awt.Color(248, 30, 154));
        clrListBtn.setFont(new java.awt.Font("Segoe UI Black", 1, 20)); // NOI18N
        clrListBtn.setForeground(new java.awt.Color(255, 255, 255));
        clrListBtn.setText("Clear List");
        clrListBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(248, 30, 154), new java.awt.Color(248, 30, 154)));
        clrListBtn.setContentAreaFilled(false);
        clrListBtn.setOpaque(true);
        clrListBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clrListBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clrListBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                clrListBtnMouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        buttonContainer.add(clrListBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 0, -60);
        jPanel5.add(buttonContainer, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 14.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        SellMedicinePanel.add(jPanel5, gridBagConstraints);

        HomePanel.add(SellMedicinePanel, "card2");

        PurchaseMedicinePanel.setBackground(new java.awt.Color(255, 255, 255));
        PurchaseMedicinePanel.setLayout(new java.awt.GridBagLayout());

        jTextField4.setEditable(false);
        jTextField4.setBackground(new java.awt.Color(255, 255, 255));
        jTextField4.setFont(new java.awt.Font("Rubik", 1, 35)); // NOI18N
        jTextField4.setForeground(new java.awt.Color(248, 30, 154));
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField4.setText("Purchase Medicine Panel");
        jTextField4.setBorder(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        PurchaseMedicinePanel.add(jTextField4, gridBagConstraints);

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));
        jPanel17.setPreferredSize(new java.awt.Dimension(1920, 765));
        jPanel17.setLayout(new java.awt.GridBagLayout());

        jLabel15.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(248, 30, 154));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Medicine Name");
        jLabel15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel15.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 20, 0);
        jPanel17.add(jLabel15, gridBagConstraints);

        jLabel16.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(248, 30, 154));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Medicine Group");
        jLabel16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel16.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 20, 0);
        jPanel17.add(jLabel16, gridBagConstraints);

        medGroup2.setEditable(false);
        medGroup2.setBackground(new java.awt.Color(255, 255, 255));
        medGroup2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        medGroup2.setForeground(new java.awt.Color(153, 153, 153));
        medGroup2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        medGroup2.setText("Select a medicine name");
        medGroup2.setToolTipText("This field wiil be auto-filled");
        medGroup2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        medGroup2.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 20, 0);
        jPanel17.add(medGroup2, gridBagConstraints);

        jLabel17.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(248, 30, 154));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Medicine Quantity");
        jLabel17.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel17.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(jLabel17, gridBagConstraints);

        medQuantity2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        medQuantity2.setForeground(new java.awt.Color(153, 153, 153));
        medQuantity2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        medQuantity2.setText("Enter quantity(number)  here");
        medQuantity2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        medQuantity2.setPreferredSize(new java.awt.Dimension(350, 35));
        medQuantity2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                medQuantity2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                medQuantity2FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(medQuantity2, gridBagConstraints);

        jLabel18.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(248, 30, 154));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Medicine Company");
        jLabel18.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel18.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(jLabel18, gridBagConstraints);

        medCo2.setEditable(false);
        medCo2.setBackground(new java.awt.Color(255, 255, 255));
        medCo2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        medCo2.setForeground(new java.awt.Color(153, 153, 153));
        medCo2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        medCo2.setText("Select a medicine name");
        medCo2.setToolTipText("This field wiil be auto-filled");
        medCo2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        medCo2.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(medCo2, gridBagConstraints);

        medName2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 26)); // NOI18N
        medName2.setForeground(new java.awt.Color(153, 153, 153));
        medName2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        medName2.setBorder(null);
        medName2.setPreferredSize(new java.awt.Dimension(350, 35));
        medName2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                medName2ItemStateChanged(evt);
            }
        });
        medName2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                medName2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                medName2MouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 20, 0);
        jPanel17.add(medName2, gridBagConstraints);

        medUnit1.setEditable(false);
        medUnit1.setBackground(new java.awt.Color(255, 255, 255));
        medUnit1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        medUnit1.setForeground(new java.awt.Color(153, 153, 153));
        medUnit1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        medUnit1.setText("Select a medicine name");
        medUnit1.setToolTipText("This field wiil be auto-filled");
        medUnit1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        medUnit1.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(medUnit1, gridBagConstraints);

        jLabel19.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(248, 30, 154));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Medicine Unit");
        jLabel19.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel19.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(jLabel19, gridBagConstraints);

        jLabel20.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(248, 30, 154));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Dealer Name");
        jLabel20.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel20.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 20, 0);
        jPanel17.add(jLabel20, gridBagConstraints);

        dealerName.setFont(new java.awt.Font("Segoe UI Semibold", 0, 26)); // NOI18N
        dealerName.setForeground(new java.awt.Color(153, 153, 153));
        dealerName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        dealerName.setBorder(null);
        dealerName.setPreferredSize(new java.awt.Dimension(350, 35));
        dealerName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dealerNameItemStateChanged(evt);
            }
        });
        dealerName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dealerNameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                dealerNameMouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 20, 0);
        jPanel17.add(dealerName, gridBagConstraints);

        jLabel21.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(248, 30, 154));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Contact Number");
        jLabel21.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel21.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 20, 0);
        jPanel17.add(jLabel21, gridBagConstraints);

        dealerMobNo.setEditable(false);
        dealerMobNo.setBackground(new java.awt.Color(255, 255, 255));
        dealerMobNo.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        dealerMobNo.setForeground(new java.awt.Color(153, 153, 153));
        dealerMobNo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dealerMobNo.setText("Select a dealer name");
        dealerMobNo.setToolTipText("This field wiil be auto-filled");
        dealerMobNo.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        dealerMobNo.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 20, 0);
        jPanel17.add(dealerMobNo, gridBagConstraints);

        jLabel22.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(248, 30, 154));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Medicine MRP");
        jLabel22.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel22.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(jLabel22, gridBagConstraints);

        mrpText1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        mrpText1.setForeground(new java.awt.Color(153, 153, 153));
        mrpText1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mrpText1.setText("MRP(incl.)");
        mrpText1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        mrpText1.setPreferredSize(new java.awt.Dimension(350, 35));
        mrpText1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mrpText1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                mrpText1FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(mrpText1, gridBagConstraints);

        jLabel23.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(248, 30, 154));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("GST");
        jLabel23.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel23.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 20, 0);
        jPanel17.add(jLabel23, gridBagConstraints);

        GST1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        GST1.setForeground(new java.awt.Color(153, 153, 153));
        GST1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        GST1.setText("Enter GST in % here");
        GST1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        GST1.setPreferredSize(new java.awt.Dimension(350, 35));
        GST1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                GST1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                GST1FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 20, 0);
        jPanel17.add(GST1, gridBagConstraints);

        jLabel24.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(248, 30, 154));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Grand Total");
        jLabel24.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel24.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(jLabel24, gridBagConstraints);

        grandTotal1.setEditable(false);
        grandTotal1.setBackground(new java.awt.Color(255, 255, 255));
        grandTotal1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        grandTotal1.setForeground(new java.awt.Color(153, 153, 153));
        grandTotal1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        grandTotal1.setText("Purchase Price(Incl.)");
        grandTotal1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        grandTotal1.setPreferredSize(new java.awt.Dimension(350, 35));
        grandTotal1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                grandTotal1FocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(grandTotal1, gridBagConstraints);

        submitPurchase.setBackground(new java.awt.Color(248, 30, 154));
        submitPurchase.setFont(new java.awt.Font("Segoe UI Black", 0, 20)); // NOI18N
        submitPurchase.setForeground(new java.awt.Color(255, 255, 255));
        submitPurchase.setText("Submit");
        submitPurchase.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        submitPurchase.setContentAreaFilled(false);
        submitPurchase.setOpaque(true);
        submitPurchase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitPurchaseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                submitPurchaseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                submitPurchaseMouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(40, 0, 0, -20);
        jPanel17.add(submitPurchase, gridBagConstraints);

        jLabel25.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(248, 30, 154));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Medicine Expiry Date");
        jLabel25.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel25.setPreferredSize(new java.awt.Dimension(350, 38));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(jLabel25, gridBagConstraints);

        jLabel26.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(248, 30, 154));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Purchase Price");
        jLabel26.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel26.setPreferredSize(new java.awt.Dimension(350, 38));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(jLabel26, gridBagConstraints);

        SPText.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        SPText.setForeground(new java.awt.Color(153, 153, 153));
        SPText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SPText.setText("Purchase Price(excl.)");
        SPText.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        SPText.setPreferredSize(new java.awt.Dimension(350, 35));
        SPText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SPTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SPTextFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(SPText, gridBagConstraints);

        jLabel27.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(248, 30, 154));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Dealer GST number");
        jLabel27.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel27.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(jLabel27, gridBagConstraints);

        jLabel28.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(248, 30, 154));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("Exclusive Invoice No.");
        jLabel28.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel28.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(jLabel28, gridBagConstraints);

        exclInvoice.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        exclInvoice.setForeground(new java.awt.Color(153, 153, 153));
        exclInvoice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        exclInvoice.setText("Enter invoice number here");
        exclInvoice.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        exclInvoice.setPreferredSize(new java.awt.Dimension(350, 35));
        exclInvoice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                exclInvoiceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                exclInvoiceFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(exclInvoice, gridBagConstraints);

        dealerGST.setEditable(false);
        dealerGST.setBackground(new java.awt.Color(255, 255, 255));
        dealerGST.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
        dealerGST.setForeground(new java.awt.Color(153, 153, 153));
        dealerGST.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dealerGST.setText("Select a dealer name");
        dealerGST.setToolTipText("This field wiil be auto-filled");
        dealerGST.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        dealerGST.setPreferredSize(new java.awt.Dimension(350, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(dealerGST, gridBagConstraints);

        expDate.setCurrentView(new datechooser.view.appearance.AppearancesList("Bordered",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    expDate.setCalendarBackground(new java.awt.Color(255, 255, 255));
    expDate.setNothingAllowed(false);
    expDate.setFieldFont(new java.awt.Font("Segoe UI Semibold", java.awt.Font.PLAIN, 26));
    expDate.setNavigateFont(new java.awt.Font("Serif", java.awt.Font.PLAIN, 26));
    expDate.setCurrentNavigateIndex(0);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.ipadx = 200;
    gridBagConstraints.ipady = 10;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel17.add(expDate, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 14.0;
    PurchaseMedicinePanel.add(jPanel17, gridBagConstraints);

    HomePanel.add(PurchaseMedicinePanel, "card2");

    AddCustomerPanel.setBackground(new java.awt.Color(255, 255, 255));
    AddCustomerPanel.setLayout(new java.awt.GridBagLayout());

    jTextField5.setEditable(false);
    jTextField5.setBackground(new java.awt.Color(255, 255, 255));
    jTextField5.setFont(new java.awt.Font("Rubik", 1, 35)); // NOI18N
    jTextField5.setForeground(new java.awt.Color(248, 30, 154));
    jTextField5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    jTextField5.setText("Add Customer Panel");
    jTextField5.setBorder(null);
    jTextField5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField5ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
    AddCustomerPanel.add(jTextField5, gridBagConstraints);

    jPanel8.setBackground(new java.awt.Color(255, 255, 255));
    jPanel8.setLayout(new java.awt.GridBagLayout());

    jLabel29.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
    jLabel29.setForeground(new java.awt.Color(248, 30, 154));
    jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel29.setText("Customer Address");
    jLabel29.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel8.add(jLabel29, gridBagConstraints);

    jLabel30.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
    jLabel30.setForeground(new java.awt.Color(248, 30, 154));
    jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel30.setText("Contact Number");
    jLabel30.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel8.add(jLabel30, gridBagConstraints);

    custMobNo.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
    custMobNo.setForeground(new java.awt.Color(153, 153, 153));
    custMobNo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    custMobNo.setText("Enter mobile number here");
    custMobNo.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
    custMobNo.setPreferredSize(new java.awt.Dimension(400, 40));
    custMobNo.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            custMobNoFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            custMobNoFocusLost(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel8.add(custMobNo, gridBagConstraints);

    jLabel31.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
    jLabel31.setForeground(new java.awt.Color(248, 30, 154));
    jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel31.setText("Customer Name");
    jLabel31.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.insets = new java.awt.Insets(100, 0, 20, 0);
    jPanel8.add(jLabel31, gridBagConstraints);

    custName1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
    custName1.setForeground(new java.awt.Color(153, 153, 153));
    custName1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    custName1.setText("Enter customer name here");
    custName1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
    custName1.setPreferredSize(new java.awt.Dimension(400, 40));
    custName1.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            custName1FocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            custName1FocusLost(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.insets = new java.awt.Insets(100, 0, 20, 0);
    jPanel8.add(custName1, gridBagConstraints);

    addCustBtn.setBackground(new java.awt.Color(248, 30, 154));
    addCustBtn.setFont(new java.awt.Font("Segoe UI Black", 0, 20)); // NOI18N
    addCustBtn.setForeground(new java.awt.Color(255, 255, 255));
    addCustBtn.setText("Add Customer");
    addCustBtn.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(248, 30, 154)));
    addCustBtn.setContentAreaFilled(false);
    addCustBtn.setOpaque(true);
    addCustBtn.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            addCustBtnMouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            addCustBtnMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            addCustBtnMouseExited(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.ipadx = 30;
    gridBagConstraints.ipady = 10;
    gridBagConstraints.insets = new java.awt.Insets(40, 0, 0, -80);
    jPanel8.add(addCustBtn, gridBagConstraints);

    jPanel18.setBackground(new java.awt.Color(255, 255, 255));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.weighty = 1.0;
    jPanel8.add(jPanel18, gridBagConstraints);

    jScrollPane1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
    jScrollPane1.setPreferredSize(new java.awt.Dimension(400, 90));

    custAddr.setColumns(20);
    custAddr.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
    custAddr.setForeground(new java.awt.Color(153, 153, 153));
    custAddr.setLineWrap(true);
    custAddr.setRows(5);
    custAddr.setText("             Enter address here");
    custAddr.setWrapStyleWord(true);
    custAddr.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
    custAddr.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            custAddrFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            custAddrFocusLost(evt);
        }
    });
    jScrollPane1.setViewportView(custAddr);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel8.add(jScrollPane1, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 14.0;
    AddCustomerPanel.add(jPanel8, gridBagConstraints);

    HomePanel.add(AddCustomerPanel, "card2");

    ShowCustomerPanel.setBackground(new java.awt.Color(255, 255, 255));
    ShowCustomerPanel.setLayout(new java.awt.GridBagLayout());

    jTextField6.setEditable(false);
    jTextField6.setBackground(new java.awt.Color(255, 255, 255));
    jTextField6.setFont(new java.awt.Font("Rubik", 1, 35)); // NOI18N
    jTextField6.setForeground(new java.awt.Color(248, 30, 154));
    jTextField6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    jTextField6.setText("Show Customer Panel");
    jTextField6.setBorder(null);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
    ShowCustomerPanel.add(jTextField6, gridBagConstraints);

    jPanel10.setBackground(new java.awt.Color(255, 255, 255));
    jPanel10.setLayout(new java.awt.GridBagLayout());

    searchEditorText.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
    searchEditorText.setForeground(new java.awt.Color(153, 153, 153));
    searchEditorText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    searchEditorText.setText("Select a filter to search");
    searchEditorText.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
    searchEditorText.setPreferredSize(new java.awt.Dimension(400, 40));
    searchEditorText.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            searchEditorTextFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            searchEditorTextFocusLost(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    jPanel10.add(searchEditorText, gridBagConstraints);

    jPanel6.setBackground(new java.awt.Color(255, 255, 255));
    jPanel6.setPreferredSize(new java.awt.Dimension(300, 50));
    jPanel6.setLayout(new java.awt.GridBagLayout());

    jTextField8.setEditable(false);
    jTextField8.setBackground(new java.awt.Color(255, 255, 255));
    jTextField8.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
    jTextField8.setForeground(new java.awt.Color(248, 30, 154));
    jTextField8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    jTextField8.setText("Filter By :  ");
    jTextField8.setBorder(null);
    jPanel6.add(jTextField8, new java.awt.GridBagConstraints());

    custFilter.setFont(new java.awt.Font("Segoe UI Emoji", 1, 20)); // NOI18N
    custFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Name", "Address", "Contact No" }));
    custFilter.setBorder(null);
    custFilter.setMinimumSize(new java.awt.Dimension(230, 26));
    custFilter.setPreferredSize(new java.awt.Dimension(230, 40));
    custFilter.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            custFilterItemStateChanged(evt);
        }
    });
    jPanel6.add(custFilter, new java.awt.GridBagConstraints());

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.insets = new java.awt.Insets(70, 0, 20, 0);
    jPanel10.add(jPanel6, gridBagConstraints);

    showCustBtn.setBackground(new java.awt.Color(248, 30, 154));
    showCustBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    showCustBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
    showCustBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    showCustBtn.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            showCustBtnMouseClicked(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, -730);
    jPanel10.add(showCustBtn, gridBagConstraints);

    jScrollPane2.setBorder(null);
    jScrollPane2.setFont(new java.awt.Font("Rubik", 1, 26)); // NOI18N
    jScrollPane2.setPreferredSize(new java.awt.Dimension(1200, 402));

    custTable.setAutoCreateRowSorter(true);
    custTable.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
    custTable.setForeground(new java.awt.Color(248, 30, 154));
    custTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Customer ID", "Name", "Address", "Contact No"
        }
    ));
    custTable.setGridColor(new java.awt.Color(0, 0, 0));
    custTable.setPreferredSize(new java.awt.Dimension(300, 400));
    custTable.setRowHeight(40);
    custTable.setRowMargin(2);
    custTable.setSelectionBackground(new java.awt.Color(51, 207, 24));
    jScrollPane2.setViewportView(custTable);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    jPanel10.add(jScrollPane2, gridBagConstraints);

    jPanel19.setBackground(new java.awt.Color(255, 255, 255));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.weighty = 1.0;
    jPanel10.add(jPanel19, gridBagConstraints);

    jLabel38.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
    jLabel38.setForeground(new java.awt.Color(255, 0, 0));
    jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel38.setText("Click on search icon to search");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel10.add(jLabel38, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 14.0;
    ShowCustomerPanel.add(jPanel10, gridBagConstraints);

    HomePanel.add(ShowCustomerPanel, "card2");

    AddDealerPanel.setBackground(new java.awt.Color(255, 255, 255));
    AddDealerPanel.setLayout(new java.awt.GridBagLayout());

    jTextField7.setEditable(false);
    jTextField7.setBackground(new java.awt.Color(255, 255, 255));
    jTextField7.setFont(new java.awt.Font("Rubik", 1, 35)); // NOI18N
    jTextField7.setForeground(new java.awt.Color(248, 30, 154));
    jTextField7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    jTextField7.setText("Add Dealer Panel");
    jTextField7.setBorder(null);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
    AddDealerPanel.add(jTextField7, gridBagConstraints);

    jPanel9.setBackground(new java.awt.Color(255, 255, 255));
    jPanel9.setLayout(new java.awt.GridBagLayout());

    jLabel33.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
    jLabel33.setForeground(new java.awt.Color(248, 30, 154));
    jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel33.setText("Address");
    jLabel33.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel9.add(jLabel33, gridBagConstraints);

    dafadf.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
    dafadf.setForeground(new java.awt.Color(248, 30, 154));
    dafadf.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    dafadf.setText("Dealer Name");
    dafadf.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.insets = new java.awt.Insets(100, 0, 20, 0);
    jPanel9.add(dafadf, gridBagConstraints);

    dealerName1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
    dealerName1.setForeground(new java.awt.Color(153, 153, 153));
    dealerName1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    dealerName1.setText("Enter dealer's name here");
    dealerName1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
    dealerName1.setPreferredSize(new java.awt.Dimension(400, 40));
    dealerName1.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dealerName1FocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            dealerName1FocusLost(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.insets = new java.awt.Insets(100, 0, 20, 0);
    jPanel9.add(dealerName1, gridBagConstraints);

    jLabel35.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
    jLabel35.setForeground(new java.awt.Color(248, 30, 154));
    jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel35.setText("Contact Number");
    jLabel35.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel9.add(jLabel35, gridBagConstraints);

    dealerMobNo1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
    dealerMobNo1.setForeground(new java.awt.Color(153, 153, 153));
    dealerMobNo1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    dealerMobNo1.setText("Enter mobile number here");
    dealerMobNo1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
    dealerMobNo1.setPreferredSize(new java.awt.Dimension(400, 40));
    dealerMobNo1.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dealerMobNo1FocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            dealerMobNo1FocusLost(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel9.add(dealerMobNo1, gridBagConstraints);

    jLabel36.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
    jLabel36.setForeground(new java.awt.Color(248, 30, 154));
    jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel36.setText("Dealer GST No.");
    jLabel36.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel9.add(jLabel36, gridBagConstraints);

    dealerGST1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
    dealerGST1.setForeground(new java.awt.Color(153, 153, 153));
    dealerGST1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    dealerGST1.setText("Enter GST number here");
    dealerGST1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
    dealerGST1.setPreferredSize(new java.awt.Dimension(400, 40));
    dealerGST1.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dealerGST1FocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            dealerGST1FocusLost(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel9.add(dealerGST1, gridBagConstraints);

    addDealerButton.setBackground(new java.awt.Color(248, 30, 154));
    addDealerButton.setFont(new java.awt.Font("Segoe UI Black", 0, 20)); // NOI18N
    addDealerButton.setForeground(new java.awt.Color(255, 255, 255));
    addDealerButton.setText("Add Dealer");
    addDealerButton.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(248, 30, 154)));
    addDealerButton.setContentAreaFilled(false);
    addDealerButton.setOpaque(true);
    addDealerButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            addDealerButtonMouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            addDealerButtonMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            addDealerButtonMouseExited(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.ipadx = 30;
    gridBagConstraints.ipady = 10;
    gridBagConstraints.insets = new java.awt.Insets(40, 0, 0, -100);
    jPanel9.add(addDealerButton, gridBagConstraints);

    jPanel20.setBackground(new java.awt.Color(255, 255, 255));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.weighty = 1.0;
    jPanel9.add(jPanel20, gridBagConstraints);

    jScrollPane6.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
    jScrollPane6.setHorizontalScrollBar(null);
    jScrollPane6.setPreferredSize(new java.awt.Dimension(400, 90));

    dealerAddr1.setColumns(20);
    dealerAddr1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
    dealerAddr1.setForeground(new java.awt.Color(153, 153, 153));
    dealerAddr1.setLineWrap(true);
    dealerAddr1.setRows(5);
    dealerAddr1.setText("Enter dealer's address here");
    dealerAddr1.setWrapStyleWord(true);
    dealerAddr1.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            dealerAddr1FocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            dealerAddr1FocusLost(evt);
        }
    });
    jScrollPane6.setViewportView(dealerAddr1);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel9.add(jScrollPane6, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 14.0;
    AddDealerPanel.add(jPanel9, gridBagConstraints);

    HomePanel.add(AddDealerPanel, "card2");

    ShowDealerPanel.setBackground(new java.awt.Color(255, 255, 255));
    ShowDealerPanel.setLayout(new java.awt.GridBagLayout());

    jTextField9.setEditable(false);
    jTextField9.setBackground(new java.awt.Color(255, 255, 255));
    jTextField9.setFont(new java.awt.Font("Rubik", 1, 35)); // NOI18N
    jTextField9.setForeground(new java.awt.Color(248, 30, 154));
    jTextField9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    jTextField9.setText("Show Dealer Panel");
    jTextField9.setBorder(null);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
    ShowDealerPanel.add(jTextField9, gridBagConstraints);

    jPanel11.setBackground(new java.awt.Color(255, 255, 255));
    jPanel11.setLayout(new java.awt.GridBagLayout());

    searchDealerText.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
    searchDealerText.setForeground(new java.awt.Color(153, 153, 153));
    searchDealerText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    searchDealerText.setText("Select a filter to search");
    searchDealerText.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
    searchDealerText.setPreferredSize(new java.awt.Dimension(400, 40));
    searchDealerText.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            searchDealerTextFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            searchDealerTextFocusLost(evt);
        }
    });
    searchDealerText.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchDealerTextActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    jPanel11.add(searchDealerText, gridBagConstraints);

    jPanel21.setBackground(new java.awt.Color(255, 255, 255));
    jPanel21.setPreferredSize(new java.awt.Dimension(300, 50));
    jPanel21.setLayout(new java.awt.GridBagLayout());

    jTextField15.setEditable(false);
    jTextField15.setBackground(new java.awt.Color(255, 255, 255));
    jTextField15.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
    jTextField15.setForeground(new java.awt.Color(248, 30, 154));
    jTextField15.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    jTextField15.setText("Filter By :  ");
    jTextField15.setBorder(null);
    jPanel21.add(jTextField15, new java.awt.GridBagConstraints());

    dealerFilter.setFont(new java.awt.Font("Segoe UI Emoji", 1, 20)); // NOI18N
    dealerFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Name", "Contact No", "GSTIN" }));
    dealerFilter.setBorder(null);
    dealerFilter.setMinimumSize(new java.awt.Dimension(230, 26));
    dealerFilter.setPreferredSize(new java.awt.Dimension(230, 40));
    dealerFilter.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            dealerFilterItemStateChanged(evt);
        }
    });
    jPanel21.add(dealerFilter, new java.awt.GridBagConstraints());

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.insets = new java.awt.Insets(70, 0, 20, 0);
    jPanel11.add(jPanel21, gridBagConstraints);

    showDealerBtn.setBackground(new java.awt.Color(248, 30, 154));
    showDealerBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    showDealerBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
    showDealerBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    showDealerBtn.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            showDealerBtnMouseClicked(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, -730);
    jPanel11.add(showDealerBtn, gridBagConstraints);

    jScrollPane3.setBorder(null);
    jScrollPane3.setPreferredSize(new java.awt.Dimension(1200, 402));

    dealersTable.setAutoCreateRowSorter(true);
    dealersTable.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
    dealersTable.setForeground(new java.awt.Color(248, 30, 154));
    dealersTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Dealer ID", "Name", "Address", "Contact No", "GSTIN"
        }
    ));
    dealersTable.setFillsViewportHeight(true);
    dealersTable.setPreferredSize(new java.awt.Dimension(300, 400));
    dealersTable.setRowHeight(40);
    dealersTable.setRowMargin(2);
    dealersTable.setSelectionBackground(new java.awt.Color(51, 207, 24));
    jScrollPane3.setViewportView(dealersTable);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    jPanel11.add(jScrollPane3, gridBagConstraints);

    jPanel22.setBackground(new java.awt.Color(255, 255, 255));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.weighty = 1.0;
    jPanel11.add(jPanel22, gridBagConstraints);

    jLabel34.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
    jLabel34.setForeground(new java.awt.Color(255, 0, 0));
    jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel34.setText("Click on search icon to search");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel11.add(jLabel34, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 14.0;
    ShowDealerPanel.add(jPanel11, gridBagConstraints);

    HomePanel.add(ShowDealerPanel, "card2");

    AvailableMedicinePanel.setBackground(new java.awt.Color(255, 255, 255));
    AvailableMedicinePanel.setLayout(new java.awt.GridBagLayout());

    jTextField10.setEditable(false);
    jTextField10.setBackground(new java.awt.Color(255, 255, 255));
    jTextField10.setFont(new java.awt.Font("Rubik", 1, 35)); // NOI18N
    jTextField10.setForeground(new java.awt.Color(248, 30, 154));
    jTextField10.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    jTextField10.setText("Available Medicine Panel");
    jTextField10.setBorder(null);
    jTextField10.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField10ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
    AvailableMedicinePanel.add(jTextField10, gridBagConstraints);

    jPanel15.setBackground(new java.awt.Color(255, 255, 255));
    jPanel15.setLayout(new java.awt.GridBagLayout());

    jPanel23.setBackground(new java.awt.Color(255, 255, 255));
    jPanel23.setPreferredSize(new java.awt.Dimension(300, 50));
    jPanel23.setLayout(new java.awt.GridBagLayout());

    jTextField16.setEditable(false);
    jTextField16.setBackground(new java.awt.Color(255, 255, 255));
    jTextField16.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
    jTextField16.setForeground(new java.awt.Color(248, 30, 154));
    jTextField16.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    jTextField16.setText("Filter By :  ");
    jTextField16.setBorder(null);
    jPanel23.add(jTextField16, new java.awt.GridBagConstraints());

    aMedFilter.setFont(new java.awt.Font("Segoe UI Emoji", 1, 20)); // NOI18N
    aMedFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Medicine ID", "Name", "Group Name", "Company Name", "Quantity", "Expiry Date" }));
    aMedFilter.setBorder(null);
    aMedFilter.setMinimumSize(new java.awt.Dimension(230, 26));
    aMedFilter.setPreferredSize(new java.awt.Dimension(230, 40));
    aMedFilter.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            aMedFilterItemStateChanged(evt);
        }
    });
    jPanel23.add(aMedFilter, new java.awt.GridBagConstraints());

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.insets = new java.awt.Insets(70, 0, 20, 0);
    jPanel15.add(jPanel23, gridBagConstraints);

    jScrollPane4.setBorder(null);
    jScrollPane4.setPreferredSize(new java.awt.Dimension(1200, 402));

    availableMedTable.setAutoCreateRowSorter(true);
    availableMedTable.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
    availableMedTable.setForeground(new java.awt.Color(248, 30, 154));
    availableMedTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null}
        },
        new String [] {
            "Medicine ID", "Name", "Group Name", "Company Name", "Quantity", "Purchase Price (incl.)", "MRP (excl.)", "Expiry Date"
        }
    ));
    availableMedTable.setPreferredSize(new java.awt.Dimension(600, 400));
    availableMedTable.setRowHeight(40);
    availableMedTable.setRowMargin(2);
    availableMedTable.setSelectionBackground(new java.awt.Color(51, 207, 24));
    jScrollPane4.setViewportView(availableMedTable);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    jPanel15.add(jScrollPane4, gridBagConstraints);

    jPanel24.setBackground(new java.awt.Color(255, 255, 255));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.weighty = 1.0;
    jPanel15.add(jPanel24, gridBagConstraints);

    jPanel28.setBackground(new java.awt.Color(255, 255, 255));
    jPanel28.setPreferredSize(new java.awt.Dimension(680, 100));
    jPanel28.setLayout(new java.awt.GridBagLayout());

    searchAMedText.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
    searchAMedText.setForeground(new java.awt.Color(153, 153, 153));
    searchAMedText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    searchAMedText.setText("Select a filter to search");
    searchAMedText.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
    searchAMedText.setPreferredSize(new java.awt.Dimension(400, 40));
    searchAMedText.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            searchAMedTextFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            searchAMedTextFocusLost(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    jPanel28.add(searchAMedText, gridBagConstraints);

    jLabel37.setBackground(new java.awt.Color(248, 30, 154));
    jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
    jLabel37.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jLabel37.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jLabel37MouseClicked(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel28.add(jLabel37, gridBagConstraints);

    jLabel45.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
    jLabel45.setForeground(new java.awt.Color(255, 0, 0));
    jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel45.setText("Click on search icon to search");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel28.add(jLabel45, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    jPanel15.add(jPanel28, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 14.0;
    AvailableMedicinePanel.add(jPanel15, gridBagConstraints);

    HomePanel.add(AvailableMedicinePanel, "card2");

    PurchasedMedicinePanel.setBackground(new java.awt.Color(255, 255, 255));
    PurchasedMedicinePanel.setLayout(new java.awt.GridBagLayout());

    jTextField11.setEditable(false);
    jTextField11.setBackground(new java.awt.Color(255, 255, 255));
    jTextField11.setFont(new java.awt.Font("Rubik", 1, 35)); // NOI18N
    jTextField11.setForeground(new java.awt.Color(248, 30, 154));
    jTextField11.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    jTextField11.setText("Purchased Medicine Panel");
    jTextField11.setBorder(null);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
    PurchasedMedicinePanel.add(jTextField11, gridBagConstraints);

    jPanel12.setBackground(new java.awt.Color(255, 255, 255));
    jPanel12.setLayout(new java.awt.GridBagLayout());

    jPanel25.setBackground(new java.awt.Color(255, 255, 255));
    jPanel25.setPreferredSize(new java.awt.Dimension(300, 50));
    jPanel25.setLayout(new java.awt.GridBagLayout());

    jTextField17.setEditable(false);
    jTextField17.setBackground(new java.awt.Color(255, 255, 255));
    jTextField17.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
    jTextField17.setForeground(new java.awt.Color(248, 30, 154));
    jTextField17.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    jTextField17.setText("Filter By :  ");
    jTextField17.setBorder(null);
    jPanel25.add(jTextField17, new java.awt.GridBagConstraints());

    pMedFilter.setFont(new java.awt.Font("Segoe UI Emoji", 1, 20)); // NOI18N
    pMedFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Medicine ID", "Medicine Name", "Company Name", "Group Name", "Dealer Name", "Dealer Contact", "Date" }));
    pMedFilter.setBorder(null);
    pMedFilter.setMinimumSize(new java.awt.Dimension(230, 26));
    pMedFilter.setPreferredSize(new java.awt.Dimension(230, 40));
    pMedFilter.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            pMedFilterItemStateChanged(evt);
        }
    });
    jPanel25.add(pMedFilter, new java.awt.GridBagConstraints());

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.insets = new java.awt.Insets(70, 0, 20, 0);
    jPanel12.add(jPanel25, gridBagConstraints);

    jPanel26.setBackground(new java.awt.Color(255, 255, 255));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.weighty = 1.0;
    jPanel12.add(jPanel26, gridBagConstraints);

    jPanel27.setBackground(new java.awt.Color(255, 255, 255));
    jPanel27.setPreferredSize(new java.awt.Dimension(700, 100));
    jPanel27.setLayout(new java.awt.GridBagLayout());

    jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
    jLabel39.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jLabel39.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jLabel39MouseClicked(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel27.add(jLabel39, gridBagConstraints);

    searchPMedText.setFont(new java.awt.Font("Segoe UI Semibold", 1, 20)); // NOI18N
    searchPMedText.setForeground(new java.awt.Color(153, 153, 153));
    searchPMedText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    searchPMedText.setText("Select a filter to search");
    searchPMedText.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
    searchPMedText.setPreferredSize(new java.awt.Dimension(400, 40));
    searchPMedText.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            searchPMedTextFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            searchPMedTextFocusLost(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    jPanel27.add(searchPMedText, gridBagConstraints);

    jLabel40.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
    jLabel40.setForeground(new java.awt.Color(255, 0, 0));
    jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel40.setText("Click on search icon to search");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel27.add(jLabel40, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    jPanel12.add(jPanel27, gridBagConstraints);

    jScrollPane5.setBackground(new java.awt.Color(255, 255, 255));
    jScrollPane5.setBorder(null);
    jScrollPane5.setAutoscrolls(true);
    jScrollPane5.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
    jScrollPane5.setPreferredSize(new java.awt.Dimension(1100, 402));

    purchaseMedTable.setAutoCreateRowSorter(true);
    purchaseMedTable.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
    purchaseMedTable.setForeground(new java.awt.Color(248, 30, 154));
    purchaseMedTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null, null, null, null}
        },
        new String [] {
            "Medicine ID", "Name", "Group Name", "Unit Number", "Quantity", "Company Name", "Dealer Name", "Dealer Contact", "Date", "Purchase Price", "MRP"
        }
    ));
    purchaseMedTable.setFillsViewportHeight(true);
    purchaseMedTable.setRowHeight(40);
    purchaseMedTable.setSelectionBackground(new java.awt.Color(51, 207, 24));
    jScrollPane5.setViewportView(purchaseMedTable);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    jPanel12.add(jScrollPane5, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 14.0;
    PurchasedMedicinePanel.add(jPanel12, gridBagConstraints);

    HomePanel.add(PurchasedMedicinePanel, "card2");

    SoldMedicinePanel.setBackground(new java.awt.Color(255, 255, 255));
    SoldMedicinePanel.setLayout(new java.awt.GridBagLayout());

    jTextField12.setEditable(false);
    jTextField12.setBackground(new java.awt.Color(255, 255, 255));
    jTextField12.setFont(new java.awt.Font("Rubik", 1, 35)); // NOI18N
    jTextField12.setForeground(new java.awt.Color(248, 30, 154));
    jTextField12.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    jTextField12.setText("Sold Medicine Panel");
    jTextField12.setBorder(null);
    jTextField12.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField12ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
    SoldMedicinePanel.add(jTextField12, gridBagConstraints);

    jPanel14.setBackground(new java.awt.Color(255, 255, 255));
    jPanel14.setLayout(new java.awt.GridBagLayout());

    jPanel31.setBackground(new java.awt.Color(255, 255, 255));
    jPanel31.setPreferredSize(new java.awt.Dimension(300, 50));
    jPanel31.setLayout(new java.awt.GridBagLayout());

    jTextField19.setEditable(false);
    jTextField19.setBackground(new java.awt.Color(255, 255, 255));
    jTextField19.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
    jTextField19.setForeground(new java.awt.Color(248, 30, 154));
    jTextField19.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    jTextField19.setText("Filter By :  ");
    jTextField19.setBorder(null);
    jPanel31.add(jTextField19, new java.awt.GridBagConstraints());

    sMedFilter.setFont(new java.awt.Font("Segoe UI Emoji", 1, 20)); // NOI18N
    sMedFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Medicine ID", "Medicine Name", "Bill Number", "Company Name", "Group Name", "Customer Name", "Customer Contact", "Date", "Time" }));
    sMedFilter.setBorder(null);
    sMedFilter.setMinimumSize(new java.awt.Dimension(230, 26));
    sMedFilter.setPreferredSize(new java.awt.Dimension(230, 40));
    sMedFilter.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            sMedFilterItemStateChanged(evt);
        }
    });
    jPanel31.add(sMedFilter, new java.awt.GridBagConstraints());

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.insets = new java.awt.Insets(70, 0, 20, 0);
    jPanel14.add(jPanel31, gridBagConstraints);

    jPanel32.setBackground(new java.awt.Color(255, 255, 255));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.weighty = 1.0;
    jPanel14.add(jPanel32, gridBagConstraints);

    jPanel33.setBackground(new java.awt.Color(255, 255, 255));
    jPanel33.setPreferredSize(new java.awt.Dimension(700, 100));
    jPanel33.setLayout(new java.awt.GridBagLayout());

    jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
    jLabel41.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jLabel41.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jLabel41MouseClicked(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel33.add(jLabel41, gridBagConstraints);

    searchSMedText2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 20)); // NOI18N
    searchSMedText2.setForeground(new java.awt.Color(153, 153, 153));
    searchSMedText2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    searchSMedText2.setText("Select a filter to search");
    searchSMedText2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
    searchSMedText2.setPreferredSize(new java.awt.Dimension(400, 40));
    searchSMedText2.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            searchSMedText2FocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            searchSMedText2FocusLost(evt);
        }
    });
    jPanel33.add(searchSMedText2, new java.awt.GridBagConstraints());

    jLabel44.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
    jLabel44.setForeground(new java.awt.Color(255, 0, 0));
    jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel44.setText("Click on search icon to search");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel33.add(jLabel44, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    jPanel14.add(jPanel33, gridBagConstraints);

    jScrollPane7.setBackground(new java.awt.Color(255, 255, 255));
    jScrollPane7.setBorder(null);
    jScrollPane7.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
    jScrollPane7.setPreferredSize(new java.awt.Dimension(1100, 402));

    soldMedTable.setAutoCreateRowSorter(true);
    soldMedTable.setFont(new java.awt.Font("Segoe UI Semilight", 1, 14)); // NOI18N
    soldMedTable.setForeground(new java.awt.Color(248, 30, 154));
    soldMedTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
        },
        new String [] {
            "Bill Number", "Medicine ID", "Name", "Group Name", "Unit Number", "Quantity", "Company Name", "Customer Name", "Customer Contact", "Date", "Applied GST", "MRP", "Selling Price", "Time of purchase"
        }
    ));
    soldMedTable.setFillsViewportHeight(true);
    soldMedTable.setRowHeight(40);
    soldMedTable.setSelectionBackground(new java.awt.Color(51, 207, 24));
    jScrollPane7.setViewportView(soldMedTable);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    jPanel14.add(jScrollPane7, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 14.0;
    SoldMedicinePanel.add(jPanel14, gridBagConstraints);

    HomePanel.add(SoldMedicinePanel, "card2");

    PurchasedGSTPanel.setBackground(new java.awt.Color(255, 255, 255));
    PurchasedGSTPanel.setLayout(new java.awt.GridBagLayout());

    jTextField13.setEditable(false);
    jTextField13.setBackground(new java.awt.Color(255, 255, 255));
    jTextField13.setFont(new java.awt.Font("Rubik", 1, 35)); // NOI18N
    jTextField13.setForeground(new java.awt.Color(248, 30, 154));
    jTextField13.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    jTextField13.setText("Purchased GST Panel");
    jTextField13.setBorder(null);
    jTextField13.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField13ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
    PurchasedGSTPanel.add(jTextField13, gridBagConstraints);

    jPanel13.setBackground(new java.awt.Color(255, 255, 255));
    jPanel13.setLayout(new java.awt.GridBagLayout());

    jPanel34.setBackground(new java.awt.Color(255, 255, 255));
    jPanel34.setPreferredSize(new java.awt.Dimension(300, 50));
    jPanel34.setLayout(new java.awt.GridBagLayout());

    jTextField20.setEditable(false);
    jTextField20.setBackground(new java.awt.Color(255, 255, 255));
    jTextField20.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
    jTextField20.setForeground(new java.awt.Color(248, 30, 154));
    jTextField20.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    jTextField20.setText("Filter By :  ");
    jTextField20.setBorder(null);
    jPanel34.add(jTextField20, new java.awt.GridBagConstraints());

    PGFilter.setFont(new java.awt.Font("Segoe UI Emoji", 1, 20)); // NOI18N
    PGFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Medicine ID", "Name", "Dealer Name", "External Invoice", "GSTIN", "Date" }));
    PGFilter.setBorder(null);
    PGFilter.setMinimumSize(new java.awt.Dimension(230, 26));
    PGFilter.setPreferredSize(new java.awt.Dimension(230, 40));
    PGFilter.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            PGFilterItemStateChanged(evt);
        }
    });
    jPanel34.add(PGFilter, new java.awt.GridBagConstraints());

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.insets = new java.awt.Insets(70, 0, 20, 0);
    jPanel13.add(jPanel34, gridBagConstraints);

    jPanel35.setBackground(new java.awt.Color(255, 255, 255));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.weighty = 1.0;
    jPanel13.add(jPanel35, gridBagConstraints);

    jPanel36.setBackground(new java.awt.Color(255, 255, 255));
    jPanel36.setPreferredSize(new java.awt.Dimension(700, 100));
    jPanel36.setLayout(new java.awt.GridBagLayout());

    jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel42.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
    jLabel42.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jLabel42.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jLabel42MouseClicked(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 1;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel36.add(jLabel42, gridBagConstraints);

    PGSearchText.setFont(new java.awt.Font("Segoe UI Semibold", 1, 20)); // NOI18N
    PGSearchText.setForeground(new java.awt.Color(153, 153, 153));
    PGSearchText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    PGSearchText.setText("Select a filter to search");
    PGSearchText.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
    PGSearchText.setPreferredSize(new java.awt.Dimension(400, 40));
    PGSearchText.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            PGSearchTextFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            PGSearchTextFocusLost(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 1;
    jPanel36.add(PGSearchText, gridBagConstraints);

    jLabel47.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
    jLabel47.setForeground(new java.awt.Color(255, 0, 0));
    jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel47.setText("Click on search icon to search");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel36.add(jLabel47, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    jPanel13.add(jPanel36, gridBagConstraints);

    jScrollPane8.setBackground(new java.awt.Color(255, 255, 255));
    jScrollPane8.setBorder(null);
    jScrollPane8.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
    jScrollPane8.setPreferredSize(new java.awt.Dimension(1000, 300));

    purchaseGSTTable.setAutoCreateRowSorter(true);
    purchaseGSTTable.setFont(new java.awt.Font("Segoe UI Semilight", 1, 14)); // NOI18N
    purchaseGSTTable.setForeground(new java.awt.Color(248, 30, 154));
    purchaseGSTTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null, null}
        },
        new String [] {
            "Medicine ID", "Name", "GSTIN", "GST Paid", "Grand Total", "Dealer Name", "External Invoice", "Date"
        }
    ));
    purchaseGSTTable.setFillsViewportHeight(true);
    purchaseGSTTable.setRowHeight(40);
    purchaseGSTTable.setSelectionBackground(new java.awt.Color(51, 207, 24));
    jScrollPane8.setViewportView(purchaseGSTTable);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    jPanel13.add(jScrollPane8, gridBagConstraints);

    jPanel39.setBackground(new java.awt.Color(255, 255, 255));
    jPanel39.setPreferredSize(new java.awt.Dimension(700, 170));

    jLabel54.setBackground(new java.awt.Color(255, 255, 255));
    jLabel54.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
    jLabel54.setForeground(new java.awt.Color(248, 30, 154));
    jLabel54.setText("Organization Name: ");

    jLabel55.setBackground(new java.awt.Color(255, 255, 255));
    jLabel55.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
    jLabel55.setForeground(new java.awt.Color(248, 30, 154));
    jLabel55.setText("Address:");

    jLabel56.setBackground(new java.awt.Color(255, 255, 255));
    jLabel56.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
    jLabel56.setForeground(new java.awt.Color(248, 30, 154));
    jLabel56.setText("Contact No:");

    jLabel57.setBackground(new java.awt.Color(255, 255, 255));
    jLabel57.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
    jLabel57.setForeground(new java.awt.Color(248, 30, 154));
    jLabel57.setText("GSTIN:");

    orgName1.setBackground(new java.awt.Color(255, 255, 255));
    orgName1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
    orgName1.setText("H7IHFSNIFIDNKNHKD");

    jScrollPane11.setBorder(null);
    jScrollPane11.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
    jScrollPane11.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
    jScrollPane11.setHorizontalScrollBar(null);

    orgAddr1.setEditable(false);
    orgAddr1.setColumns(20);
    orgAddr1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
    orgAddr1.setLineWrap(true);
    orgAddr1.setRows(2);
    orgAddr1.setText("gyjsgdjfg d sghf ghs ghfdh jjs hgfjfbhjd sj fjs bdmfbmhsdvhjf vgjsd vjfv msd vmfvhmsdbvfmvsmhd vfv sjd");
    orgAddr1.setWrapStyleWord(true);
    orgAddr1.setBorder(null);
    jScrollPane11.setViewportView(orgAddr1);

    orgContact1.setBackground(new java.awt.Color(255, 255, 255));
    orgContact1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
    orgContact1.setText("98847289793874");

    orgGST1.setBackground(new java.awt.Color(255, 255, 255));
    orgGST1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
    orgGST1.setText("97J9SFDF9J9DIFNH");

    javax.swing.GroupLayout jPanel39Layout = new javax.swing.GroupLayout(jPanel39);
    jPanel39.setLayout(jPanel39Layout);
    jPanel39Layout.setHorizontalGroup(
        jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel39Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jLabel54, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel55, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel56, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel57, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(orgName1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(orgContact1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(orgGST1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)))
    );
    jPanel39Layout.setVerticalGroup(
        jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel39Layout.createSequentialGroup()
            .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(orgName1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel39Layout.createSequentialGroup()
                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                    .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(orgContact1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(orgGST1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel39Layout.createSequentialGroup()
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addContainerGap())
    );

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 3;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, -700);
    jPanel13.add(jPanel39, gridBagConstraints);

    printPurchaseGSTBtn.setBackground(new java.awt.Color(248, 30, 154));
    printPurchaseGSTBtn.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
    printPurchaseGSTBtn.setForeground(new java.awt.Color(255, 255, 255));
    printPurchaseGSTBtn.setText("PRINT");
    printPurchaseGSTBtn.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(248, 30, 154)));
    printPurchaseGSTBtn.setContentAreaFilled(false);
    printPurchaseGSTBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    printPurchaseGSTBtn.setOpaque(true);
    printPurchaseGSTBtn.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            printPurchaseGSTBtnMouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            printPurchaseGSTBtnMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            printPurchaseGSTBtnMouseExited(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.ipadx = 15;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
    jPanel13.add(printPurchaseGSTBtn, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 14.0;
    PurchasedGSTPanel.add(jPanel13, gridBagConstraints);

    HomePanel.add(PurchasedGSTPanel, "card2");

    SoldGSTPanel.setBackground(new java.awt.Color(255, 255, 255));
    SoldGSTPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 2, new java.awt.Color(153, 153, 153)));
    SoldGSTPanel.setLayout(new java.awt.GridBagLayout());

    jTextField14.setEditable(false);
    jTextField14.setBackground(new java.awt.Color(255, 255, 255));
    jTextField14.setFont(new java.awt.Font("Rubik", 1, 35)); // NOI18N
    jTextField14.setForeground(new java.awt.Color(248, 30, 154));
    jTextField14.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    jTextField14.setText("Sold GST Panel");
    jTextField14.setBorder(null);
    jTextField14.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField14ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
    SoldGSTPanel.add(jTextField14, gridBagConstraints);

    jPanel7.setBackground(new java.awt.Color(255, 255, 255));
    jPanel7.setLayout(new java.awt.GridBagLayout());

    jPanel37.setBackground(new java.awt.Color(255, 255, 255));
    jPanel37.setPreferredSize(new java.awt.Dimension(300, 50));
    jPanel37.setLayout(new java.awt.GridBagLayout());

    jTextField21.setEditable(false);
    jTextField21.setBackground(new java.awt.Color(255, 255, 255));
    jTextField21.setFont(new java.awt.Font("Segoe UI Semibold", 1, 30)); // NOI18N
    jTextField21.setForeground(new java.awt.Color(248, 30, 154));
    jTextField21.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    jTextField21.setText("Filter By :  ");
    jTextField21.setBorder(null);
    jPanel37.add(jTextField21, new java.awt.GridBagConstraints());

    SGFilter.setFont(new java.awt.Font("Segoe UI Emoji", 1, 20)); // NOI18N
    SGFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Medicine ID", "Name", "Bill Number", "Date" }));
    SGFilter.setBorder(null);
    SGFilter.setMinimumSize(new java.awt.Dimension(230, 26));
    SGFilter.setPreferredSize(new java.awt.Dimension(230, 40));
    SGFilter.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            SGFilterItemStateChanged(evt);
        }
    });
    jPanel37.add(SGFilter, new java.awt.GridBagConstraints());

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.insets = new java.awt.Insets(70, 0, 20, 0);
    jPanel7.add(jPanel37, gridBagConstraints);

    jPanel38.setBackground(new java.awt.Color(255, 255, 255));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.weighty = 1.0;
    jPanel7.add(jPanel38, gridBagConstraints);

    jScrollPane9.setBackground(new java.awt.Color(255, 255, 255));
    jScrollPane9.setBorder(null);
    jScrollPane9.setFont(new java.awt.Font("Segoe UI Semibold", 1, 26)); // NOI18N
    jScrollPane9.setPreferredSize(new java.awt.Dimension(1000, 300));

    soldGSTTable.setAutoCreateRowSorter(true);
    soldGSTTable.setFont(new java.awt.Font("Segoe UI Semilight", 1, 14)); // NOI18N
    soldGSTTable.setForeground(new java.awt.Color(248, 30, 154));
    soldGSTTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null},
            {null, null, null, null, null, null, null}
        },
        new String [] {
            "Medicine ID", "Name", "Quantity", "GST Applied", "Grand Total", "Bill Number", "Date"
        }
    ));
    soldGSTTable.setFillsViewportHeight(true);
    soldGSTTable.setRowHeight(40);
    soldGSTTable.setSelectionBackground(new java.awt.Color(51, 207, 24));
    jScrollPane9.setViewportView(soldGSTTable);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    jPanel7.add(jScrollPane9, gridBagConstraints);

    jPanel29.setBackground(new java.awt.Color(255, 255, 255));
    jPanel29.setPreferredSize(new java.awt.Dimension(690, 100));
    jPanel29.setLayout(new java.awt.GridBagLayout());

    jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel43.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
    jLabel43.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jLabel43.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jLabel43MouseClicked(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 1;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
    jPanel29.add(jLabel43, gridBagConstraints);

    SGSearchText.setFont(new java.awt.Font("Segoe UI Semibold", 1, 20)); // NOI18N
    SGSearchText.setForeground(new java.awt.Color(153, 153, 153));
    SGSearchText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    SGSearchText.setText("Select a filter to search");
    SGSearchText.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
    SGSearchText.setPreferredSize(new java.awt.Dimension(400, 40));
    SGSearchText.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            SGSearchTextFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            SGSearchTextFocusLost(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 1;
    jPanel29.add(SGSearchText, gridBagConstraints);

    jLabel46.setFont(new java.awt.Font("Sitka Display", 1, 14)); // NOI18N
    jLabel46.setForeground(new java.awt.Color(255, 0, 0));
    jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel46.setText("Click on search icon to search");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
    jPanel29.add(jLabel46, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    jPanel7.add(jPanel29, gridBagConstraints);

    jPanel30.setBackground(new java.awt.Color(255, 255, 255));
    jPanel30.setPreferredSize(new java.awt.Dimension(700, 170));

    jLabel32.setBackground(new java.awt.Color(255, 255, 255));
    jLabel32.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
    jLabel32.setForeground(new java.awt.Color(248, 30, 154));
    jLabel32.setText("Organization Name: ");

    jLabel48.setBackground(new java.awt.Color(255, 255, 255));
    jLabel48.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
    jLabel48.setForeground(new java.awt.Color(248, 30, 154));
    jLabel48.setText("Address:");

    jLabel49.setBackground(new java.awt.Color(255, 255, 255));
    jLabel49.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
    jLabel49.setForeground(new java.awt.Color(248, 30, 154));
    jLabel49.setText("Contact No:");

    jLabel50.setBackground(new java.awt.Color(255, 255, 255));
    jLabel50.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
    jLabel50.setForeground(new java.awt.Color(248, 30, 154));
    jLabel50.setText("GSTIN:");

    orgName2.setBackground(new java.awt.Color(255, 255, 255));
    orgName2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
    orgName2.setText("H7IHFSNIFIDNKNHKD");

    jScrollPane10.setBorder(null);
    jScrollPane10.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
    jScrollPane10.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
    jScrollPane10.setHorizontalScrollBar(null);

    orgAddr2.setEditable(false);
    orgAddr2.setColumns(20);
    orgAddr2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
    orgAddr2.setLineWrap(true);
    orgAddr2.setRows(2);
    orgAddr2.setText("gyjsgdjfg d sghf ghs ghfdh jjs hgfjfbhjd sj fjs bdmfbmhsdvhjf vgjsd vjfv msd vmfvhmsdbvfmvsmhd vfv sjd");
    orgAddr2.setWrapStyleWord(true);
    orgAddr2.setBorder(null);
    jScrollPane10.setViewportView(orgAddr2);

    orgContact2.setBackground(new java.awt.Color(255, 255, 255));
    orgContact2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
    orgContact2.setText("98847289793874");

    orgGST2.setBackground(new java.awt.Color(255, 255, 255));
    orgGST2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
    orgGST2.setText("97J9SFDF9J9DIFNH");

    javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
    jPanel30.setLayout(jPanel30Layout);
    jPanel30Layout.setHorizontalGroup(
        jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel30Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(orgName2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(orgContact2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(orgGST2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)))
    );
    jPanel30Layout.setVerticalGroup(
        jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel30Layout.createSequentialGroup()
            .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(orgName2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel30Layout.createSequentialGroup()
                    .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                    .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(orgContact2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(orgGST2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel30Layout.createSequentialGroup()
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addContainerGap())
    );

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 3;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, -700);
    jPanel7.add(jPanel30, gridBagConstraints);

    printSoldGSTBtn.setBackground(new java.awt.Color(248, 30, 154));
    printSoldGSTBtn.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
    printSoldGSTBtn.setForeground(new java.awt.Color(255, 255, 255));
    printSoldGSTBtn.setText("PRINT");
    printSoldGSTBtn.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(248, 30, 154)));
    printSoldGSTBtn.setContentAreaFilled(false);
    printSoldGSTBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    printSoldGSTBtn.setOpaque(true);
    printSoldGSTBtn.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            printSoldGSTBtnMouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            printSoldGSTBtnMouseEntered(evt);
        }
        public void mouseExited(java.awt.event.MouseEvent evt) {
            printSoldGSTBtnMouseExited(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.ipadx = 15;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
    jPanel7.add(printSoldGSTBtn, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 14.0;
    SoldGSTPanel.add(jPanel7, gridBagConstraints);

    HomePanel.add(SoldGSTPanel, "card2");

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 30.0;
    jPanel3.add(HomePanel, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 4.0;
    jPanel1.add(jPanel3, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(jPanel1, gridBagConstraints);

    jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));
    jMenuBar1.setBorder(null);
    jMenuBar1.setForeground(new java.awt.Color(255, 255, 255));
    jMenuBar1.setBorderPainted(false);

    jMenu1.setBackground(new java.awt.Color(255, 255, 255));
    jMenu1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 2, new java.awt.Color(153, 153, 153)));
    jMenu1.setForeground(new java.awt.Color(248, 30, 154));
    jMenu1.setText("     Medicines");
    jMenu1.setContentAreaFilled(false);
    jMenu1.setDelay(240);
    jMenu1.setFocusPainted(true);
    jMenu1.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
    jMenu1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jMenu1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jMenu1.setOpaque(true);
    jMenu1.setPreferredSize(new java.awt.Dimension(120, 24));
    jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jMenu1MouseClicked(evt);
        }
    });

    jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
    jMenuItem1.setText("Add Medicine");
    jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItem1ActionPerformed(evt);
        }
    });
    jMenu1.add(jMenuItem1);

    jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
    jMenuItem2.setText("Sell Medicine");
    jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItem2ActionPerformed(evt);
        }
    });
    jMenu1.add(jMenuItem2);

    jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_MASK));
    jMenuItem3.setText("Purchase Medicines");
    jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItem3ActionPerformed(evt);
        }
    });
    jMenu1.add(jMenuItem3);

    jMenuBar1.add(jMenu1);

    jMenu2.setBackground(new java.awt.Color(255, 255, 255));
    jMenu2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 2, new java.awt.Color(153, 153, 153)));
    jMenu2.setForeground(new java.awt.Color(248, 30, 154));
    jMenu2.setText("     Customers");
    jMenu2.setContentAreaFilled(false);
    jMenu2.setDelay(240);
    jMenu2.setFocusPainted(true);
    jMenu2.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
    jMenu2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jMenu2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jMenu2.setOpaque(true);
    jMenu2.setPreferredSize(new java.awt.Dimension(120, 24));

    jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
    jMenuItem4.setText("Add Customer");
    jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItem4ActionPerformed(evt);
        }
    });
    jMenu2.add(jMenuItem4);

    jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
    jMenuItem5.setText("Show Customers");
    jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItem5ActionPerformed(evt);
        }
    });
    jMenu2.add(jMenuItem5);

    jMenuBar1.add(jMenu2);

    jMenu3.setBackground(new java.awt.Color(255, 255, 255));
    jMenu3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 2, new java.awt.Color(153, 153, 153)));
    jMenu3.setForeground(new java.awt.Color(248, 30, 154));
    jMenu3.setText("       Dealers");
    jMenu3.setContentAreaFilled(false);
    jMenu3.setDelay(240);
    jMenu3.setFocusPainted(true);
    jMenu3.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
    jMenu3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jMenu3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jMenu3.setOpaque(true);
    jMenu3.setPreferredSize(new java.awt.Dimension(120, 24));

    jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
    jMenuItem6.setText("Add Dealer");
    jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItem6ActionPerformed(evt);
        }
    });
    jMenu3.add(jMenuItem6);

    jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
    jMenuItem7.setText("Show Dealers");
    jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItem7ActionPerformed(evt);
        }
    });
    jMenu3.add(jMenuItem7);

    jMenuBar1.add(jMenu3);

    jMenu4.setBackground(new java.awt.Color(255, 255, 255));
    jMenu4.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 2, new java.awt.Color(153, 153, 153)));
    jMenu4.setForeground(new java.awt.Color(248, 30, 154));
    jMenu4.setText("         Show");
    jMenu4.setContentAreaFilled(false);
    jMenu4.setDelay(240);
    jMenu4.setFocusPainted(true);
    jMenu4.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
    jMenu4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jMenu4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jMenu4.setOpaque(true);
    jMenu4.setPreferredSize(new java.awt.Dimension(120, 24));

    jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.ALT_MASK));
    jMenuItem8.setText("Available Medicines");
    jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItem8ActionPerformed(evt);
        }
    });
    jMenu4.add(jMenuItem8);

    jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
    jMenuItem9.setText("Purchased Medicines");
    jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItem9ActionPerformed(evt);
        }
    });
    jMenu4.add(jMenuItem9);

    jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_MASK));
    jMenuItem10.setText("Sold Medicines");
    jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItem10ActionPerformed(evt);
        }
    });
    jMenu4.add(jMenuItem10);

    jMenuBar1.add(jMenu4);

    jMenu5.setBackground(new java.awt.Color(255, 255, 255));
    jMenu5.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 2, new java.awt.Color(153, 153, 153)));
    jMenu5.setForeground(new java.awt.Color(248, 30, 154));
    jMenu5.setText("      Accounts");
    jMenu5.setContentAreaFilled(false);
    jMenu5.setDelay(240);
    jMenu5.setFocusPainted(true);
    jMenu5.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
    jMenu5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jMenu5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jMenu5.setOpaque(true);
    jMenu5.setPreferredSize(new java.awt.Dimension(120, 24));

    jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.SHIFT_MASK));
    jMenuItem11.setText("Purchased GST");
    jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItem11ActionPerformed(evt);
        }
    });
    jMenu5.add(jMenuItem11);

    jMenuItem12.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK));
    jMenuItem12.setText("Sold GST");
    jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItem12ActionPerformed(evt);
        }
    });
    jMenu5.add(jMenuItem12);

    jMenuBar1.add(jMenu5);

    setJMenuBar(jMenuBar1);

    pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private String med_ID = "";
    private String del_ID = "";
    private String med_q = "";
    
    private void populateSellMedComboBox(){
        try{
            String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(url, "root", "");
            Statement st = conn.createStatement();
            
            List<String> items = new ArrayList();
            
            ResultSet rs = st.executeQuery("Select * from medicines");
            
            items.add("None");
            while(rs.next()){
                items.add(rs.getString("Name"));
            }
            rs.close();
            medName1.setModel(new DefaultComboBoxModel<>(items.toArray(new String[items.size()])));
            items.clear();
            
            ResultSet rs2 = st.executeQuery("Select * from customers");
            
            items.add("None");
            while(rs2.next()){
                items.add(rs2.getString("Name"));
            }
            rs2.close();
            custName.setModel(new DefaultComboBoxModel<>(items.toArray(new String[items.size()])));
            items.clear();
            
            conn.close();

        } catch (Exception e){
            new DBDownDialogBox().setVisible(true);
        }
    }
    
    private void addItemsToComboBoxes(){
        try{
            String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(url, "root", "");
            Statement st = conn.createStatement();
            
            List<String> items = new ArrayList();
            
            ResultSet rs = st.executeQuery("Select * from medicines");
            
            items.add("None");
            while(rs.next()){
                items.add(rs.getString("Name"));
            }
            rs.close();
            medName2.setModel(new DefaultComboBoxModel<>(items.toArray(new String[items.size()])));
            items.clear();
            
            ResultSet rs2 = st.executeQuery("Select * from dealers");
            
            items.add("None");
            while(rs2.next()){
                items.add(rs2.getString("Name"));
            }
            rs2.close();
            dealerName.setModel(new DefaultComboBoxModel<>(items.toArray(new String[items.size()])));
            items.clear();
            
            conn.close();

        } catch (Exception e){
            new DBDownDialogBox().setVisible(true);
        }
    }
    
    
    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        HomePanel.removeAll();
        HomePanel.repaint();
        HomePanel.revalidate();
        
        HomePanel.add(AddMedicinePanel);
        HomePanel.repaint();
        HomePanel.revalidate();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        HomePanel.removeAll();
        HomePanel.repaint();
        HomePanel.revalidate();
        
        HomePanel.add(SellMedicinePanel);
        HomePanel.repaint();
        HomePanel.revalidate();
        
        populateSellMedComboBox();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        HomePanel.removeAll();
        HomePanel.repaint();
        HomePanel.revalidate();
        
        HomePanel.add(PurchaseMedicinePanel);
        HomePanel.repaint();
        HomePanel.revalidate();
        
        
        addItemsToComboBoxes();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        HomePanel.removeAll();
        HomePanel.repaint();
        HomePanel.revalidate();
        
        HomePanel.add(AddCustomerPanel);
        HomePanel.repaint();
        HomePanel.revalidate();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        HomePanel.removeAll();
        HomePanel.repaint();
        HomePanel.revalidate();
        
        HomePanel.add(ShowCustomerPanel);
        HomePanel.repaint();
        HomePanel.revalidate();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        HomePanel.removeAll();
        HomePanel.repaint();
        HomePanel.revalidate();
        
        HomePanel.add(AddDealerPanel);
        HomePanel.repaint();
        HomePanel.revalidate();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        HomePanel.removeAll();
        HomePanel.repaint();
        HomePanel.revalidate();
        
        HomePanel.add(ShowDealerPanel);
        HomePanel.repaint();
        HomePanel.revalidate();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        HomePanel.removeAll();
        HomePanel.repaint();
        HomePanel.revalidate();
        
        HomePanel.add(AvailableMedicinePanel);
        HomePanel.repaint();
        HomePanel.revalidate();
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        HomePanel.removeAll();
        HomePanel.repaint();
        HomePanel.revalidate();
        
        HomePanel.add(PurchasedMedicinePanel);
        HomePanel.repaint();
        HomePanel.revalidate();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        HomePanel.removeAll();
        HomePanel.repaint();
        HomePanel.revalidate();
        
        HomePanel.add(SoldMedicinePanel);
        HomePanel.repaint();
        HomePanel.revalidate();
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
        HomePanel.removeAll();
        HomePanel.repaint();
        HomePanel.revalidate();
        
        HomePanel.add(PurchasedGSTPanel);
        HomePanel.repaint();
        HomePanel.revalidate();
        
        try {            
            String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(url, "root", "");
            Statement st = conn.createStatement();
            
            ResultSet rs = st.executeQuery("Select GST, `Company Address`, `Company Name`, `Mobile Number` from user_table where `User ID` = "+userID);    
            if(rs.next()){
                orgGST1.setText(rs.getString("GST"));
                orgAddr1.setText(rs.getString("Company Address"));
                orgName1.setText(rs.getString("Company Name"));
                orgContact1.setText(rs.getString("Mobile Number"));
            }    
            rs.close();
            conn.close();
        } catch (Exception e) {
                new DBDownDialogBox().setVisible(true);
                System.out.println("Purchased GST Model\n-------------------------------------\n"+e);
        }
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // TODO add your handling code here:
        HomePanel.removeAll();
        HomePanel.repaint();
        HomePanel.revalidate();
        
        HomePanel.add(SoldGSTPanel);
        HomePanel.repaint();
        HomePanel.revalidate();
        try {            
            String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(url, "root", "");
            Statement st = conn.createStatement();
            
            ResultSet rs = st.executeQuery("Select GST, `Company Address`, `Company Name`, `Mobile Number` from user_table where `User ID` = "+userID);    
            if(rs.next()){
                orgGST2.setText(rs.getString("GST"));
                orgAddr2.setText(rs.getString("Company Address"));
                orgName2.setText(rs.getString("Company Name"));
                orgContact2.setText(rs.getString("Mobile Number"));
            }    
            rs.close();
            conn.close();
        } catch (Exception e) {
                new DBDownDialogBox().setVisible(true);
                System.out.println("Sold GST Model\n-------------------------------------\n"+e);
        }
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField14ActionPerformed

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField10ActionPerformed

    private void jTextField12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField12ActionPerformed

    private void medNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_medNameFocusGained
        // TODO add your handling code here:
        if(medName.getText().equals("Enter medicine name here") || medName.getText().equals("Enter a valid medicine name!")){
            medName.setText("");
        }
        medName.setForeground(Color.BLACK);
    }//GEN-LAST:event_medNameFocusGained

    private void medNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_medNameFocusLost
        // TODO add your handling code here:
        if(medName.getText().equals("")){
            medName.setText("Enter medicine name here");
            medName.setForeground(Color.decode("#999999"));
        }
    }//GEN-LAST:event_medNameFocusLost

    private void medGroupFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_medGroupFocusGained
        // TODO add your handling code here:
        if(medGroup.getText().equals("Enter group name here") || medGroup.getText().equals("Medicine group name cannot be empty!")){
            medGroup.setText("");
        }
        medGroup.setForeground(Color.BLACK);
    }//GEN-LAST:event_medGroupFocusGained

    private void medGroupFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_medGroupFocusLost
        // TODO add your handling code here:
        if(medGroup.getText().equals("")){
            medGroup.setText("Enter group name here");
            medGroup.setForeground(Color.decode("#999999"));
        }
    }//GEN-LAST:event_medGroupFocusLost

    private void medUnit2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_medUnit2FocusGained
        // TODO add your handling code here:
        if(medUnit2.getText().equals("Enter unit number here") || medUnit2.getText().equals("Enter a valid unit number!")){
            medUnit2.setText("");
        }
        medUnit2.setForeground(Color.BLACK);
    }//GEN-LAST:event_medUnit2FocusGained

    private void medUnit2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_medUnit2FocusLost
        // TODO add your handling code here:
        if(medUnit2.getText().equals("")){
            medUnit2.setText("Enter unit number here");
            medUnit2.setForeground(Color.decode("#999999"));
        }
    }//GEN-LAST:event_medUnit2FocusLost

    private void medCoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_medCoFocusGained
        // TODO add your handling code here:
        if(medCo.getText().equals("Enter company name here") || medCo.getText().equals("Company name cannot be empty!")){
            medCo.setText("");
        }
        medCo.setForeground(Color.BLACK);
    }//GEN-LAST:event_medCoFocusGained

    private void medCoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_medCoFocusLost
        // TODO add your handling code here:
        if(medCo.getText().equals("")){
            medCo.setText("Enter company name here");
            medCo.setForeground(Color.decode("#999999"));
        }
    }//GEN-LAST:event_medCoFocusLost

    private void medQuantity1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_medQuantity1FocusGained
        // TODO add your handling code here:
        if(medQuantity1.getText().equals("Enter quantity(number) here") || medQuantity1.getText().equals("Don't have enough supplies!")){
            medQuantity1.setText("");
        }
        medQuantity1.setForeground(Color.BLACK);
    }//GEN-LAST:event_medQuantity1FocusGained

    private void medQuantity1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_medQuantity1FocusLost
        // TODO add your handling code here:
        if(medQuantity1.getText().equals("")){
            medQuantity1.setText("Enter quantity(number) here");
            medQuantity1.setForeground(Color.decode("#999999"));
        } else if(Integer.valueOf(med_q) < Integer.valueOf(medQuantity1.getText())){
            medQuantity1.setText("Don't have enough supplies!");
            medQuantity1.setForeground(Color.RED);
        } else {
            if(med_q == ""){
                medQuantity1.setText("Don't have enough supplies!");
                medQuantity1.setForeground(Color.RED); 
            } else {
                med_q = Integer.toString(Integer.valueOf(med_q)-Integer.valueOf(medQuantity1.getText()));
            }
        }
    }//GEN-LAST:event_medQuantity1FocusLost

    private void medName1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medName1MouseExited
        // TODO add your handling code here:
        medName1.setForeground(Color.decode("#999999"));
    }//GEN-LAST:event_medName1MouseExited

    private void medName1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medName1MouseEntered
        // TODO add your handling code here:
        medName1.setForeground(Color.BLACK);
    }//GEN-LAST:event_medName1MouseEntered

    private void custNameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_custNameMouseEntered
        // TODO add your handling code here:
        custName.setForeground(Color.BLACK);
    }//GEN-LAST:event_custNameMouseEntered

    private void custNameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_custNameMouseExited
        // TODO add your handling code here:
        custName.setForeground(Color.decode("#999999"));
    }//GEN-LAST:event_custNameMouseExited

    private void GSTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_GSTFocusGained
        // TODO add your handling code here:
        if(GST.getText().equals("Enter GST in % here")){
            GST.setText("");
        }
        GST.setForeground(Color.BLACK);
    }//GEN-LAST:event_GSTFocusGained
    
    private void GSTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_GSTFocusLost
        // TODO add your handling code here:
        if(GST.getText().equals("")){
            GST.setText("Enter GST in % here");
            GST.setForeground(Color.decode("#999999"));
        } else {
            double sellingPrice = Double.valueOf(mrpText.getText());
            double gst_perc = Double.valueOf(GST.getText().split("%")[0]);
            if(sellingPrice > 0){
                if(gst_perc > 0){
                    grandTotal.setText(Double.toString(Double.valueOf(medQuantity1.getText())*sellingPrice+gst_perc*Double.valueOf(medQuantity1.getText())*sellingPrice/100));
                    grandTotal.setForeground(Color.BLACK);
                } else {
                    GST.setText("Enter GST in % here");
                    GST.setForeground(Color.decode("#999999"));
                    new ZeroOrEmptyFieldDialogBox("GST").setVisible(true);
                }
            } else {
                GST.setText("Enter GST in % here");
                GST.setForeground(Color.decode("#999999"));
                new ZeroOrEmptyFieldDialogBox("Purchase price").setVisible(true);
            }
        }
    }//GEN-LAST:event_GSTFocusLost

    private void medQuantity2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_medQuantity2FocusGained
        // TODO add your handling code here:
        if(medQuantity2.getText().equals("Enter quantity(number)  here")){
            medQuantity2.setText("");
        }
        medQuantity2.setForeground(Color.BLACK);
    }//GEN-LAST:event_medQuantity2FocusGained

    private void medQuantity2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_medQuantity2FocusLost
        // TODO add your handling code here:
        if(medQuantity2.getText().equals("") || Integer.valueOf(medQuantity2.getText()) == 0){
            medQuantity2.setText("Enter quantity(number)  here");
            medQuantity2.setForeground(Color.decode("#999999"));
            new ZeroOrEmptyFieldDialogBox("Quantity").setVisible(true);
        }
    }//GEN-LAST:event_medQuantity2FocusLost

    private void medName2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medName2MouseEntered
        // TODO add your handling code here:
        medName2.setForeground(Color.BLACK);
    }//GEN-LAST:event_medName2MouseEntered

    private void medName2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medName2MouseExited
        // TODO add your handling code here:
        medName2.setForeground(Color.decode("#999999"));
    }//GEN-LAST:event_medName2MouseExited

    private void dealerNameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dealerNameMouseEntered
        // TODO add your handling code here:
        dealerName.setForeground(Color.BLACK);
    }//GEN-LAST:event_dealerNameMouseEntered

    private void dealerNameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dealerNameMouseExited
        // TODO add your handling code here:
        dealerName.setForeground(Color.decode("#999999"));
    }//GEN-LAST:event_dealerNameMouseExited

    private void mrpText1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mrpText1FocusGained
        // TODO add your handling code here:
        if(mrpText1.getText().equals("MRP(incl.)")){
            mrpText1.setText("");
        }
        mrpText1.setForeground(Color.BLACK);
    }//GEN-LAST:event_mrpText1FocusGained

    private void mrpText1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mrpText1FocusLost
        // TODO add your handling code here:
        if(mrpText1.getText().equals("") || Integer.valueOf(mrpText1.getText())==0){
            mrpText1.setText("MRP(incl.)");
            mrpText1.setForeground(Color.decode("#999999"));
            new ZeroOrEmptyFieldDialogBox("MRP").setVisible(true);
        }
    }//GEN-LAST:event_mrpText1FocusLost

    private void GST1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_GST1FocusGained
        // TODO add your handling code here:
        if(GST1.getText().equals("Enter GST in % here")){
            GST1.setText("");
        }
        GST1.setForeground(Color.BLACK);
    }//GEN-LAST:event_GST1FocusGained

    private void GST1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_GST1FocusLost
        // TODO add your handling code here:
        if(GST1.getText().equals("")){
            GST1.setText("Enter GST in % here");
            GST1.setForeground(Color.decode("#999999"));
        } else {
            double purchasePrice = Double.valueOf(SPText.getText());
            double gst_perc = Double.valueOf(GST1.getText().split("%")[0]);
            if(purchasePrice > 0){
                if(gst_perc > 0){
                    grandTotal1.setText(Double.toString(Double.valueOf(medQuantity2.getText())*purchasePrice+gst_perc*Double.valueOf(medQuantity2.getText())*purchasePrice/100));
                    grandTotal1.setForeground(Color.BLACK);
                } else {
                    SPText.setText("Enter GST in % here");
                    SPText.setForeground(Color.decode("#999999"));
                    new ZeroOrEmptyFieldDialogBox("GST").setVisible(true);
                }
            } else {
                GST1.setText("Enter GST in % here");
                GST1.setForeground(Color.decode("#999999"));
                new ZeroOrEmptyFieldDialogBox("Purchase price").setVisible(true);
            }
        }
        
    }//GEN-LAST:event_GST1FocusLost

    private void SPTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SPTextFocusGained
        // TODO add your handling code here:
        if(SPText.getText().equals("Purchase Price(excl.)")){
            SPText.setText("");
        }
        SPText.setForeground(Color.BLACK);
    }//GEN-LAST:event_SPTextFocusGained

    private void SPTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SPTextFocusLost
        // TODO add your handling code here:
        if(SPText.getText().equals("")){
            SPText.setText("Purchase Price(excl.)");
            SPText.setForeground(Color.decode("#999999"));
        }
    }//GEN-LAST:event_SPTextFocusLost

    private void exclInvoiceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exclInvoiceFocusGained
        // TODO add your handling code here:
        if(exclInvoice.getText().equals("Enter invoice number here")){
            exclInvoice.setText("");
        }
        exclInvoice.setForeground(Color.BLACK);
    }//GEN-LAST:event_exclInvoiceFocusGained

    private void exclInvoiceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_exclInvoiceFocusLost
        // TODO add your handling code here:
        if(exclInvoice.getText().equals("")){
            exclInvoice.setText("Enter invoice number here");
            exclInvoice.setForeground(Color.decode("#999999"));
        }
    }//GEN-LAST:event_exclInvoiceFocusLost

    private void custMobNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_custMobNoFocusGained
        // TODO add your handling code here:
        if(custMobNo.getText().equals("Enter mobile number here")){
            custMobNo.setText("");
        }
        custMobNo.setForeground(Color.BLACK);
    }//GEN-LAST:event_custMobNoFocusGained

    private void custMobNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_custMobNoFocusLost
        // TODO add your handling code here:
        if(custMobNo.getText().equals("")){
            custMobNo.setText("Enter mobile number here");
            custMobNo.setForeground(Color.decode("#999999"));
        }
    }//GEN-LAST:event_custMobNoFocusLost

    private void custName1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_custName1FocusGained
        // TODO add your handling code here:
        if(custName1.getText().equals("Enter customer name here")){
            custName1.setText("");
        }
        custName1.setForeground(Color.BLACK);
    }//GEN-LAST:event_custName1FocusGained

    private void custName1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_custName1FocusLost
        // TODO add your handling code here:
        if(custName1.getText().equals("")){
            custName1.setText("Enter customer name here");
            custName1.setForeground(Color.decode("#999999"));
        }
    }//GEN-LAST:event_custName1FocusLost

    private void custAddrFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_custAddrFocusGained
        // TODO add your handling code here:
        if(custAddr.getText().equals("             Enter address here")){
            custAddr.setText("");
        }
        custAddr.setForeground(Color.BLACK);
    }//GEN-LAST:event_custAddrFocusGained

    private void custAddrFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_custAddrFocusLost
        // TODO add your handling code here:
        if(custAddr.getText().equals("")){
            custAddr.setText("             Enter address here");
            custAddr.setForeground(Color.decode("#999999"));
        }
    }//GEN-LAST:event_custAddrFocusLost

    private void searchEditorTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchEditorTextFocusGained
        // TODO add your handling code here:
        if(searchEditorText.getText().equals("Enter name here") || searchEditorText.getText().equals("Enter address here") || searchEditorText.getText().equals("Enter mobile number here")){
            searchEditorText.setEditable(true);
            searchEditorText.setText("");
            searchEditorText.setForeground(Color.BLACK);
        } else if(searchEditorText.getText().equals("Select a filter to search")){
            searchEditorText.setEditable(false);
            searchEditorText.setForeground(Color.RED);
        }
    }//GEN-LAST:event_searchEditorTextFocusGained

    private void searchEditorTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchEditorTextFocusLost
        // TODO add your handling code here:
        if(searchEditorText.getText().equals("")){
            Object selectedItem = custFilter.getSelectedItem();
            if(selectedItem.toString().equals("Name")){
                searchEditorText.setText("Enter name here");
                searchEditorText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Address")){
                searchEditorText.setText("Enter address here");
                searchEditorText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Contact No")){
                searchEditorText.setText("Enter mobile number here");
                searchEditorText.setForeground(Color.decode("#999999"));
            }  else if(selectedItem.toString().equals("None")){
                searchEditorText.setText("Select a filter to search");
                searchEditorText.setForeground(Color.decode("#999999"));
            }
        }
    }//GEN-LAST:event_searchEditorTextFocusLost

    private void custFilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_custFilterItemStateChanged
        // TODO add your handling code here:
        Object selectedItem = custFilter.getSelectedItem();
        if(selectedItem.toString().equals("Name")){
            searchEditorText.setText("Enter name here");
            searchEditorText.setForeground(Color.decode("#999999"));
            filterVar = "name";
        } else if(selectedItem.toString().equals("Address")){
            searchEditorText.setText("Enter address here");
            searchEditorText.setForeground(Color.decode("#999999"));
            filterVar = "address";
        } else if(selectedItem.toString().equals("Contact No")){
            searchEditorText.setText("Enter mobile number here");
            searchEditorText.setForeground(Color.decode("#999999"));
            filterVar = "Mobile No.";
        } else if(selectedItem.toString().equals("None")){
            searchEditorText.setText("Select a filter to search");
            searchEditorText.setForeground(Color.decode("#999999"));
            filterVar = "None";
        }
    }//GEN-LAST:event_custFilterItemStateChanged

    private void dealerName1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dealerName1FocusGained
        // TODO add your handling code here:
        if(dealerName1.getText().equals("Enter dealer's name here") || dealerName1.getText().equals("Name cannot be empty!")){
            dealerName1.setText("");
        }
        dealerName1.setForeground(Color.BLACK);
    }//GEN-LAST:event_dealerName1FocusGained

    private void dealerName1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dealerName1FocusLost
        // TODO add your handling code here:
        if(dealerName1.getText().equals("")){
            dealerName1.setText("Enter dealer's name here");
            dealerName1.setForeground(Color.decode("#999999"));
        }
    }//GEN-LAST:event_dealerName1FocusLost

    private void dealerMobNo1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dealerMobNo1FocusGained
        // TODO add your handling code here:
        if(dealerMobNo1.getText().equals("Enter mobile number here") || dealerMobNo1.getText().equals("Enter valid mobile number!")){
            dealerMobNo1.setText("");
        }
        dealerMobNo1.setForeground(Color.BLACK);
    }//GEN-LAST:event_dealerMobNo1FocusGained

    private void dealerMobNo1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dealerMobNo1FocusLost
        // TODO add your handling code here:
        if(dealerMobNo1.getText().equals("")){
            dealerMobNo1.setText("Enter mobile number here");
            dealerMobNo1.setForeground(Color.decode("#999999"));
        }
    }//GEN-LAST:event_dealerMobNo1FocusLost

    private void dealerGST1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dealerGST1FocusGained
        // TODO add your handling code here:
        if(dealerGST1.getText().equals("Enter GST number here") || dealerGST1.getText().equals("Enter a valid GST length!")){
            dealerGST1.setText("");
        }
        dealerGST1.setForeground(Color.BLACK);
    }//GEN-LAST:event_dealerGST1FocusGained

    private void dealerGST1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dealerGST1FocusLost
        // TODO add your handling code here:
        if(dealerGST1.getText().equals("")){
            dealerGST1.setText("Enter GST number here");
            dealerGST1.setForeground(Color.decode("#999999"));
        }
    }//GEN-LAST:event_dealerGST1FocusLost

    private void searchDealerTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchDealerTextFocusGained
        // TODO add your handling code here:
        if(searchDealerText.getText().equals("Enter name here") || searchDealerText.getText().equals("Enter GSTIN here") || searchDealerText.getText().equals("Enter mobile number here")){            
            searchDealerText.setEditable(true);
            searchDealerText.setText("");
            searchDealerText.setForeground(Color.BLACK);
        } else if(searchDealerText.getText().equals("Select a filter to search")){
            searchDealerText.setEditable(false);
            searchDealerText.setForeground(Color.RED);
        }
    }//GEN-LAST:event_searchDealerTextFocusGained

    private void searchDealerTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchDealerTextFocusLost
        // TODO add your handling code here:
        if(searchDealerText.getText().equals("")){
            Object selectedItem = dealerFilter.getSelectedItem();
            if(selectedItem.toString().equals("Name")){
                searchDealerText.setText("Enter name here");
                searchDealerText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("GSTIN")){
                searchDealerText.setText("Enter GSTIN here");
                searchDealerText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Contact No")){
                searchDealerText.setText("Enter mobile number here");
                searchDealerText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("None")){
                searchDealerText.setText("Select a filter to search");
                searchDealerText.setForeground(Color.decode("#999999"));
            }
        }
    }//GEN-LAST:event_searchDealerTextFocusLost

    private void dealerFilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dealerFilterItemStateChanged
        // TODO add your handling code here:
        Object selectedItem = dealerFilter.getSelectedItem();
        if(selectedItem.toString().equals("Name")){
            searchDealerText.setText("Enter name here");
            searchDealerText.setForeground(Color.decode("#999999"));
            filterVar = "name";
        } else if(selectedItem.toString().equals("GSTIN")){
            searchDealerText.setText("Enter GSTIN here");
            searchDealerText.setForeground(Color.decode("#999999"));
            filterVar = "GSTIN";
        } else if(selectedItem.toString().equals("Contact No")){
            searchDealerText.setText("Enter mobile number here");
            searchDealerText.setForeground(Color.decode("#999999"));
            filterVar = "Contact";
        } else if(selectedItem.toString().equals("None")){
            searchDealerText.setText("Select a filter to search");
            searchDealerText.setForeground(Color.decode("#999999"));
            filterVar = "None";
        }
    }//GEN-LAST:event_dealerFilterItemStateChanged

    private void searchAMedTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchAMedTextFocusGained
        // TODO add your handling code here:
        if(searchAMedText.getText().equals("Enter medicine name here") || searchAMedText.getText().equals("Enter date(dd/MM/YYYY) here") || searchAMedText.getText().equals("Enter unit number here") || searchAMedText.getText().equals("Enter medicine ID here") || searchAMedText.getText().equals("Enter group name here") || searchAMedText.getText().equals("Enter company name here") || searchAMedText.getText().equals("Enter quantity here")){
            searchAMedText.setEditable(true);
            searchAMedText.setText("");
            searchAMedText.setForeground(Color.BLACK);
        } else if(searchAMedText.getText().equals("Select a filter to search")){
            searchAMedText.setEditable(false);
            searchAMedText.setForeground(Color.RED);
        }
    }//GEN-LAST:event_searchAMedTextFocusGained

    private void searchAMedTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchAMedTextFocusLost
        // TODO add your handling code here:
        if(searchAMedText.getText().equals("")){
            Object selectedItem = aMedFilter.getSelectedItem();
            if(selectedItem.toString().equals("Medicine ID")){
                searchAMedText.setText("Enter medicine ID here");
                searchAMedText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Name")){
                searchAMedText.setText("Enter medicine name here");
                searchAMedText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Unit Number")){
                searchAMedText.setText("Enter unit number here");
                searchAMedText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Group Name")){
                searchAMedText.setText("Enter group name here");
                searchAMedText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Company Name")){
                searchAMedText.setText("Enter company name here");
                searchAMedText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Quantity")){
                searchAMedText.setText("Enter quantity here");
                searchAMedText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Expiry Date")){
                searchAMedText.setText("Enter date(dd/MM/YYYY) here");
                searchAMedText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("None")){
                searchAMedText.setText("Select a filter to search");
                searchAMedText.setForeground(Color.decode("#999999"));
            }
        }
    }//GEN-LAST:event_searchAMedTextFocusLost

    private void aMedFilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_aMedFilterItemStateChanged
        // TODO add your handling code here:
        Object selectedItem = aMedFilter.getSelectedItem();
        if(selectedItem.toString().equals("Medicine ID")){
            searchAMedText.setText("Enter medicine ID here");
            searchAMedText.setForeground(Color.decode("#999999"));
            filterVar = "ID";
        } else if(selectedItem.toString().equals("Name")){
            searchAMedText.setText("Enter medicine name here");
            searchAMedText.setForeground(Color.decode("#999999"));
            filterVar = "name";
        } else if(selectedItem.toString().equals("Group Name")){
            searchAMedText.setText("Enter group name here");
            searchAMedText.setForeground(Color.decode("#999999"));
            filterVar = "grp";
        } else if(selectedItem.toString().equals("Company Name")){
            searchAMedText.setText("Enter company name here");
            searchAMedText.setForeground(Color.decode("#999999"));
            filterVar = "c_name";
        } else if(selectedItem.toString().equals("Quantity")){
            searchAMedText.setText("Enter quantity here");
            searchAMedText.setForeground(Color.decode("#999999"));
            filterVar = "Qty";
        } else if(selectedItem.toString().equals("Expiry Date")){
            searchAMedText.setText("Enter date(dd/MM/YYYY) here");
            searchAMedText.setForeground(Color.decode("#999999"));
            filterVar = "date";
        } else if(selectedItem.toString().equals("None")){
            searchAMedText.setText("Select a filter to search");
            searchAMedText.setForeground(Color.decode("#999999"));
            filterVar = "None";
        }
    }//GEN-LAST:event_aMedFilterItemStateChanged

    private void pMedFilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pMedFilterItemStateChanged
        // TODO add your handling code here:
        Object selectedItem = pMedFilter.getSelectedItem();
        if(selectedItem.toString().equals("Medicine ID")){
            searchPMedText.setText("Enter medicine ID here");
            searchPMedText.setForeground(Color.decode("#999999"));
            filterVar = "ID";
        } else if(selectedItem.toString().equals("Medicine Name")){
            searchPMedText.setText("Enter medicine name here");
            searchPMedText.setForeground(Color.decode("#999999"));
            filterVar = "medName";
        } else if(selectedItem.toString().equals("Dealer Contact")){
            searchPMedText.setText("Enter mobile number here");
            searchPMedText.setForeground(Color.decode("#999999"));
            filterVar = "d_contact";
        } else if(selectedItem.toString().equals("Dealer Name")){
            searchPMedText.setText("Enter dealer's name here");
            searchPMedText.setForeground(Color.decode("#999999"));
            filterVar = "d_name";
        }else if(selectedItem.toString().equals("Date")){
            searchPMedText.setText("Enter purchase date(dd/MM/YYYY) here");
            searchPMedText.setForeground(Color.decode("#999999"));
            filterVar = "date";
        } else if(selectedItem.toString().equals("Company Name")){
            searchPMedText.setText("Enter company name here");
            searchPMedText.setForeground(Color.decode("#999999"));
            filterVar = "c_name";
        } else if(selectedItem.toString().equals("Group Name")){
            searchPMedText.setText("Enter group name here");
            searchPMedText.setForeground(Color.decode("#999999"));
            filterVar = "grp";
        }  else if(selectedItem.toString().equals("None")){
            searchPMedText.setText("Select a filter to search");
            searchPMedText.setForeground(Color.decode("#999999"));
            filterVar = "None";
        }
    }//GEN-LAST:event_pMedFilterItemStateChanged

    private void searchPMedTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchPMedTextFocusGained
        // TODO add your handling code here:
        if(searchPMedText.getText().equals("Enter medicine name here") || searchPMedText.getText().equals("Enter company name here") || searchPMedText.getText().equals("Enter group name here") || searchPMedText.getText().equals("Enter medicine ID here") || searchPMedText.getText().equals("Enter mobile number here") || searchPMedText.getText().equals("Enter dealer's name here") || searchPMedText.getText().equals("Enter purchase date(dd/MM/YYYY) here")){
            searchPMedText.setEditable(true);
            searchPMedText.setText("");
            searchPMedText.setForeground(Color.BLACK);
        } else if(searchPMedText.getText().equals("Select a filter to search")){
            searchPMedText.setEditable(false);
            searchPMedText.setForeground(Color.RED);
        }
        
    }//GEN-LAST:event_searchPMedTextFocusGained

    private void searchPMedTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchPMedTextFocusLost
        // TODO add your handling code here:
        if(searchPMedText.getText().equals("")){
            Object selectedItem = pMedFilter.getSelectedItem();
            if(selectedItem.toString().equals("Medicine ID")){
                searchPMedText.setText("Enter medicine ID here");
                searchPMedText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Medicine Name")){
                searchPMedText.setText("Enter medicine name here");
                searchPMedText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Dealer Contact")){
                searchPMedText.setText("Enter mobile number here");
                searchPMedText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Dealer Name")){
                searchPMedText.setText("Enter dealer's name here");
                searchPMedText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Date")){
                searchPMedText.setText("Enter purchase date(dd/MM/YYYY) here");
                searchPMedText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Company Name")){
                searchPMedText.setText("Enter company name here");
                searchPMedText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Group Name")){
                searchPMedText.setText("Enter group name here");
                searchPMedText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("None")){
                searchPMedText.setText("Select a filter to search");
                searchPMedText.setForeground(Color.decode("#999999"));
            }
        }
    }//GEN-LAST:event_searchPMedTextFocusLost

    private void sMedFilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sMedFilterItemStateChanged
        // TODO add your handling code here:
        Object selectedItem = sMedFilter.getSelectedItem();
        if(selectedItem.toString().equals("Medicine ID")){
            searchSMedText2.setText("Enter medicine ID here");
            searchSMedText2.setForeground(Color.decode("#999999"));
            filterVar = "ID";
        } else if(selectedItem.toString().equals("Medicine Name")){
            searchSMedText2.setText("Enter medicine name here");
            searchSMedText2.setForeground(Color.decode("#999999"));
            filterVar = "name";
        } else if(selectedItem.toString().equals("Bill Number")){
            searchSMedText2.setText("Enter bill number here");
            searchSMedText2.setForeground(Color.decode("#999999"));
            filterVar = "bill";
        } else if(selectedItem.toString().equals("Customer Contact")){
            searchSMedText2.setText("Enter mobile number here");
            searchSMedText2.setForeground(Color.decode("#999999"));
            filterVar = "contact";
        } else if(selectedItem.toString().equals("Company Name")){
            searchSMedText2.setText("Enter company name here");
            searchSMedText2.setForeground(Color.decode("#999999"));
            filterVar = "c_name";
        } else if(selectedItem.toString().equals("Group Name")){
            searchSMedText2.setText("Enter group name here");
            searchSMedText2.setForeground(Color.decode("#999999"));
            filterVar = "grp";
        } else if(selectedItem.toString().equals("Customer Name")){
            searchSMedText2.setText("Enter customer's name here");
            searchSMedText2.setForeground(Color.decode("#999999"));
            filterVar = "cust_name";
        } else if(selectedItem.toString().equals("Date")){
            searchSMedText2.setText("Enter purchase date(dd/MM/YYYY) here");
            searchSMedText2.setForeground(Color.decode("#999999"));
            filterVar = "date";
        } else if(selectedItem.toString().equals("Time")){
            searchSMedText2.setText("Enter hours(in 12-hr format) here");
            searchSMedText2.setForeground(Color.decode("#999999"));
            filterVar = "time";
        } else if(selectedItem.toString().equals("None")){
            searchSMedText2.setText("Select a filter to search");
            searchSMedText2.setForeground(Color.decode("#999999"));
            filterVar = "None";
        }
    }//GEN-LAST:event_sMedFilterItemStateChanged

    private void searchSMedText2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchSMedText2FocusGained
        // TODO add your handling code here:
        if(searchSMedText2.getText().equals("Enter medicine name here") || searchSMedText2.getText().equals("Enter bill number here") || searchSMedText2.getText().equals("Enter hours(in 12-hr format) here") || searchSMedText2.getText().equals("Enter medicine ID here") || searchSMedText2.getText().equals("Enter mobile number here") || searchSMedText2.getText().equals("Enter customer's name here") || searchSMedText2.getText().equals("Enter purchase date(dd/MM/YYYY) here") || searchSMedText2.getText().equals("Enter company name here") || searchSMedText2.getText().equals("Enter group name here")){
            searchSMedText2.setEditable(true);
            searchSMedText2.setText("");
            searchSMedText2.setForeground(Color.BLACK);
        } else if(searchSMedText2.getText().equals("Select a filter to search")){
            searchSMedText2.setEditable(false);
            searchSMedText2.setForeground(Color.RED);
        }
        
    }//GEN-LAST:event_searchSMedText2FocusGained

    private void searchSMedText2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchSMedText2FocusLost
        // TODO add your handling code here:
        if(searchSMedText2.getText().equals("")){
            Object selectedItem = sMedFilter.getSelectedItem();
            if(selectedItem.toString().equals("Medicine ID")){
                searchSMedText2.setText("Enter medicine ID here");
                searchSMedText2.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Medcine Name")){
                searchSMedText2.setText("Enter medicine name here");
                searchSMedText2.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Bill Number")){
                searchSMedText2.setText("Enter bill number here");
                searchSMedText2.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Group Name")){
                searchSMedText2.setText("Enter group name here");
                searchSMedText2.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Customer Contact")){
                searchSMedText2.setText("Enter mobile number here");
                searchSMedText2.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Customer Name")){
                searchSMedText2.setText("Enter customer's name here");
                searchSMedText2.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Company Name")){
                searchSMedText2.setText("Enter company name here");
                searchSMedText2.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("time")){
                searchSMedText2.setText("Enter hours(in 12-hr format) here");
                searchSMedText2.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Date")){
                searchSMedText2.setText("Enter purchase date(dd/MM/YYYY) here");
                searchSMedText2.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("None")){
                searchSMedText2.setText("Select a filter to search");
                searchSMedText2.setForeground(Color.decode("#999999"));
            }
        }
    }//GEN-LAST:event_searchSMedText2FocusLost

    private void PGFilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_PGFilterItemStateChanged
        // TODO add your handling code here:
        Object selectedItem = PGFilter.getSelectedItem();
        if(selectedItem.toString().equals("Medicine ID")){
            PGSearchText.setText("Enter medicine ID here");
            PGSearchText.setForeground(Color.decode("#999999"));
            filterVar = "ID";
        } else if(selectedItem.toString().equals("Name")){
            PGSearchText.setText("Enter medicine name here");
            PGSearchText.setForeground(Color.decode("#999999"));
            filterVar = "name";
        } else if(selectedItem.toString().equals("Dealer Name")){
            PGSearchText.setText("Enter dealer's name here");
            PGSearchText.setForeground(Color.decode("#999999"));
            filterVar = "d_name";
        } else if(selectedItem.toString().equals("External Invoice")){
            PGSearchText.setText("Enter ext. invoice no. here");
            PGSearchText.setForeground(Color.decode("#999999"));
            filterVar = "invoice";
        } else if(selectedItem.toString().equals("Date")){
            PGSearchText.setText("Enter purchase date(dd/MM/YYYY) here");
            PGSearchText.setForeground(Color.decode("#999999"));
            filterVar = "date";
        } else if(selectedItem.toString().equals("GSTIN")){
            PGSearchText.setText("Enter GSTIN here");
            PGSearchText.setForeground(Color.decode("#999999"));
            filterVar = "gst";
        } else if(selectedItem.toString().equals("None")){
            PGSearchText.setText("Select a filter to search");
            PGSearchText.setForeground(Color.decode("#999999"));
            filterVar = "None";
        }
    }//GEN-LAST:event_PGFilterItemStateChanged

    private void PGSearchTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PGSearchTextFocusGained
        // TODO add your handling code here:
        if(PGSearchText.getText().equals("Enter medicine name here") || PGSearchText.getText().equals("Enter dealer's name here") || PGSearchText.getText().equals("Enter medicine ID here") || PGSearchText.getText().equals("Enter ext. invoice no. here") || PGSearchText.getText().equals("Enter purchase date(dd/MM/YYYY) here") || PGSearchText.getText().equals("Enter GSTIN here")){
            PGSearchText.setEditable(true);
            PGSearchText.setText("");
            PGSearchText.setForeground(Color.BLACK);
        } else if(PGSearchText.getText().equals("Select a filter to search")){
            PGSearchText.setEditable(false);
            PGSearchText.setForeground(Color.RED);
        }
    }//GEN-LAST:event_PGSearchTextFocusGained

    private void PGSearchTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PGSearchTextFocusLost
        // TODO add your handling code here:
        if(PGSearchText.getText().equals("")){
            Object selectedItem = PGFilter.getSelectedItem();
            if(selectedItem.toString().equals("Medicine ID")){
                PGSearchText.setText("Enter medicine ID here");
                PGSearchText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Name")){
                PGSearchText.setText("Enter medicine name here");
                PGSearchText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("External Invoice")){
                PGSearchText.setText("Enter ext. invoice no. here");
                PGSearchText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Dealer Name")){
                PGSearchText.setText("Enter dealer's name here");
                PGSearchText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Date")){
                PGSearchText.setText("Enter purchase date(dd/MM/YYYY) here");
                PGSearchText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("GSTIN")){
                PGSearchText.setText("Enter GSTIN here");
                PGSearchText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("None")){
                PGSearchText.setText("Select a filter to search");
                PGSearchText.setForeground(Color.decode("#999999"));
            }
        }
    }//GEN-LAST:event_PGSearchTextFocusLost

    private void SGFilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SGFilterItemStateChanged
        // TODO add your handling code here:
        Object selectedItem = SGFilter.getSelectedItem();
        if(selectedItem.toString().equals("Medicine ID")){
            SGSearchText.setText("Enter medicine ID here");
            SGSearchText.setForeground(Color.decode("#999999"));
            filterVar = "ID";
        } else if(selectedItem.toString().equals("Name")){
            SGSearchText.setText("Enter medicine name here");
            SGSearchText.setForeground(Color.decode("#999999"));
            filterVar = "name";
        } else if(selectedItem.toString().equals("Bill Number")){
            SGSearchText.setText("Enter bill number here");
            SGSearchText.setForeground(Color.decode("#999999"));
            filterVar = "bill";
        }else if(selectedItem.toString().equals("Date")){
            SGSearchText.setText("Enter purchase date here");
            SGSearchText.setForeground(Color.decode("#999999"));
            filterVar = "date";
        } else if(selectedItem.toString().equals("None")){
            SGSearchText.setText("Select a filter to search");
            SGSearchText.setForeground(Color.decode("#999999"));
            filterVar = "None";
        }
    }//GEN-LAST:event_SGFilterItemStateChanged

    private void SGSearchTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SGSearchTextFocusGained
        // TODO add your handling code here:
        if(SGSearchText.getText().equals("Enter medicine name here") || SGSearchText.getText().equals("Enter bill number here") || SGSearchText.getText().equals("Enter medicine ID here") || SGSearchText.getText().equals("Enter date here")){
            SGSearchText.setEditable(true);
            SGSearchText.setText("");
            SGSearchText.setForeground(Color.BLACK);
        } else if(SGSearchText.getText().equals("Select a filter to search")){
            SGSearchText.setEditable(false);
            SGSearchText.setForeground(Color.RED);
        }
    }//GEN-LAST:event_SGSearchTextFocusGained

    private void SGSearchTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SGSearchTextFocusLost
        // TODO add your handling code here:
        if(SGSearchText.getText().equals("")){
            Object selectedItem = SGFilter.getSelectedItem();
            if(selectedItem.toString().equals("Medicine ID")){
                SGSearchText.setText("Enter medicine ID here");
                SGSearchText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Name")){
                SGSearchText.setText("Enter medicine name here");
                SGSearchText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("Bill Number")){
                SGSearchText.setText("Enter bill number here");
                SGSearchText.setForeground(Color.decode("#999999"));
            }else if(selectedItem.toString().equals("Date")){
                SGSearchText.setText("Enter purchase date here");
                SGSearchText.setForeground(Color.decode("#999999"));
            } else if(selectedItem.toString().equals("None")){
                SGSearchText.setText("Select a filter to search");
                SGSearchText.setForeground(Color.decode("#999999"));
            }
        }
    }//GEN-LAST:event_SGSearchTextFocusLost

    private void addDealerButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addDealerButtonMouseClicked
        // TODO add your handling code here:
        if(dealerName1.getText().length() > 0){
            if(dealerAddr1.getText().length() > 0){
                if(dealerMobNo1.getText().length() == 10){
                    if(dealerGST1.getText().length() > 0){
                        try{
                            String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
                            Class.forName("com.mysql.jdbc.Driver");
                            Connection conn = DriverManager.getConnection(url, "root", "");
                            Statement st = conn.createStatement();
                            
                            String d_name = dealerName1.getText();
                            String d_addr = dealerAddr1.getText();
                            String d_mob_no = dealerMobNo1.getText();
                            String d_GST = dealerGST1.getText();
                            
                            st.executeUpdate("Insert into dealers values(0, '"+d_name+"', '"+d_addr+"', "+d_mob_no+", '"+d_GST+"')");
                            
                            new addDealerDialogBox().setVisible(true);
                            
                            conn.close();
                            
                        } catch (Exception e){
                            new DBDownDialogBox().setVisible(true);
                        }
                    } else {
                        dealerGST1.setText("Enter a valid GST length!");
                        dealerGST1.setForeground(Color.RED);
                    }
                } else {
                    dealerMobNo1.setText("Enter valid mobile number!");
                    dealerMobNo1.setForeground(Color.RED);
                }
            } else {
                dealerAddr1.setText("Enter a valid address!");
                dealerAddr1.setForeground(Color.RED);
            }
        } else {
            dealerName1.setText("Name cannot be empty!");
            dealerName1.setForeground(Color.RED);
        }
    }//GEN-LAST:event_addDealerButtonMouseClicked

    private void showDealerBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showDealerBtnMouseClicked
        // TODO add your handling code here:
        try{
            String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(url, "root", "");
            Statement st = conn.createStatement();
            
            String searchText = searchDealerText.getText();
            
            ResultSet rs = st.executeQuery("Select * from dealers");
            switch (filterVar) {
                case "name":
                    rs = searchText.equals("") ? st.executeQuery("Select * from dealers") : st.executeQuery("Select * from dealers where Name REGEXP '^"+searchText+"'");
                    break;
                case "GSTIN":
                    rs = searchText.equals("") ? st.executeQuery("Select * from dealers") : st.executeQuery("Select * from dealers where `GST Number` REGEXP '^"+searchText+"'");
                    break;
                case "Contact":
                    rs = searchText.equals("") ? st.executeQuery("Select * from dealers") :  st.executeQuery("Select * from dealers where `Mobile Number` REGEXP '^"+searchText+"'");
                    break;
                default:
                    if(searchText.equals("Enter mobile number here") || searchText.equals("Select a filter to search") || searchText.equals("Enter name here") || searchText.equals("Enter GSTIN here")){
                        rs = st.executeQuery("Select * from dealers");
                    } else {
                        new dataNFDialogBox().setVisible(true);
                    }
                    break;
            }
            if(!rs.next()){
                new dataNFDialogBox().setVisible(true);
            } else {
                rs.beforeFirst();
                dealersTable.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            conn.close();

        } catch (Exception e){
            new DBDownDialogBox().setVisible(true);
        }
        
    }//GEN-LAST:event_showDealerBtnMouseClicked

    private void dealerAddr1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dealerAddr1FocusGained
        // TODO add your handling code here:
        if(dealerAddr1.getText().equals("Enter dealer's address here") || dealerAddr1.getText().equals("Enter a valid address!")){
            dealerAddr1.setText("");
        }
        dealerAddr1.setForeground(Color.BLACK);
    }//GEN-LAST:event_dealerAddr1FocusGained

    private void dealerAddr1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dealerAddr1FocusLost
        // TODO add your handling code here:
        if(dealerAddr1.getText().equals("")){
            dealerAddr1.setText("Enter dealer's address here");
            dealerAddr1.setForeground(Color.decode("#999999"));
        }
    }//GEN-LAST:event_dealerAddr1FocusLost

    private void searchDealerTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDealerTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchDealerTextActionPerformed

    private void addCustBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCustBtnMouseClicked
        // TODO add your handling code here:
        if(custName1.getText().length() > 0){
            if(custAddr.getText().length() > 0){
                if(custMobNo.getText().length() == 10){
                    try{
                        String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
                        Class.forName("com.mysql.jdbc.Driver");
                        Connection conn = DriverManager.getConnection(url, "root", "");
                        Statement st = conn.createStatement();

                        String c_name = custName1.getText();
                        String c_addr = custAddr.getText();
                        String c_mob_no = custMobNo.getText();

                        st.executeUpdate("Insert into customers values(0, '"+c_name+"', '"+c_addr+"', "+c_mob_no+")");

                        new addDealerDialogBox("customer").setVisible(true);

                        conn.close();

                    } catch (Exception e){
                        new DBDownDialogBox().setVisible(true);
                    }
                } else {
                    custMobNo.setText("Enter valid mobile number!");
                    custMobNo.setForeground(Color.RED);
                }
            } else {
                custAddr.setText("Enter a valid address!");
                custAddr.setForeground(Color.RED);
            }
        } else {
            custName1.setText("Name cannot be empty!");
            custName1.setForeground(Color.RED);
        }
    }//GEN-LAST:event_addCustBtnMouseClicked

    private void addCustBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCustBtnMouseEntered
        // TODO add your handling code here:
        addCustBtn.setBackground(Color.WHITE);
        addCustBtn.setForeground(Color.decode("#F81E9A"));
    }//GEN-LAST:event_addCustBtnMouseEntered

    private void addCustBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCustBtnMouseExited
        // TODO add your handling code here:
        addCustBtn.setBackground(Color.decode("#F81E9A"));
        addCustBtn.setForeground(Color.WHITE);
    }//GEN-LAST:event_addCustBtnMouseExited

    private void addDealerButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addDealerButtonMouseEntered
        // TODO add your handling code here:
        addDealerButton.setBackground(Color.WHITE);
        addDealerButton.setForeground(Color.decode("#F81E9A"));
    }//GEN-LAST:event_addDealerButtonMouseEntered

    private void addDealerButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addDealerButtonMouseExited
        // TODO add your handling code here:
        addDealerButton.setBackground(Color.decode("#F81E9A"));
        addDealerButton.setForeground(Color.WHITE);
    }//GEN-LAST:event_addDealerButtonMouseExited

    private void showCustBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showCustBtnMouseClicked
        // TODO add your handling code here:
        try{
            String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(url, "root", "");
            Statement st = conn.createStatement();
            
            String searchText = searchEditorText.getText();
            
            ResultSet rs = st.executeQuery("Select * from customers");
            switch (filterVar) {
                case "name":
                    rs = searchText.equals("") ? st.executeQuery("Select * from customers") : st.executeQuery("Select * from customers where Name REGEXP '^"+searchText+"'");
                    break;
                case "address":
                    rs = searchText.equals("") ? st.executeQuery("Select * from customers") : st.executeQuery("Select * from customers where Address REGEXP '^"+searchText+"'");
                    break;
                case "Mobile No.":
                    rs = searchText.equals("") ? st.executeQuery("Select * from customers") :  st.executeQuery("Select * from customers where `Contact No.` REGEXP '^"+searchText+"'");
                    break;
                default:
                    if(searchText.equals("Enter mobile number here") || searchText.equals("Select a filter to search") || searchText.equals("Enter name here") || searchText.equals("Enter address here")){
                        rs = st.executeQuery("Select * from customers");
                    } else {
                        new dataNFDialogBox().setVisible(true);
                    }
                    break;
            }
            if(!rs.next()){
                new dataNFDialogBox().setVisible(true);
            } else {
                rs.beforeFirst();
                custTable.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            conn.close();

        } catch (Exception e){
            new DBDownDialogBox().setVisible(true);
        }
    }//GEN-LAST:event_showCustBtnMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        if(medName.getText().length() > 0){
            if(medGroup.getText().length() > 0){
                if(medUnit2.getText().length() > 0){
                    if(medCo.getText().length() > 0){
                        try{
                            String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
                            Class.forName("com.mysql.jdbc.Driver");
                            Connection conn = DriverManager.getConnection(url, "root", "");
                            Statement st = conn.createStatement();
                            
                            ResultSet r = st.executeQuery("Select * from medicines where `Unit Number`='"+medUnit2.getText()+"' OR Name='"+medName.getText()+"'");
                            
                            if(r.next()){
                                new MedExistsDialogBox().setVisible(true);
                            } else {
                                st.executeUpdate("Insert into medicines values(0, '"+medName.getText()+"', '"+medGroup.getText()+"', '"+medUnit2.getText()+"' ,'"+medCo.getText()+"')");
                                new addDealerDialogBox("medicine").setVisible(true);    
                            }
                            
                            

                            conn.close();

                        } catch (Exception e){
                            new DBDownDialogBox().setVisible(true);
                        }
                    } else {
                        medCo.setText("Company name cannot be empty!");
                        medCo.setForeground(Color.RED);
                    } 
                } else {
                    medUnit2.setText("Enter a valid unit number!");
                    medUnit2.setForeground(Color.RED);
                }
            } else {
                medGroup.setText("Medicine group name cannot be empty!");
                medGroup.setForeground(Color.RED);
            }
        } else {
            medName.setText("Enter a valid medicine name!");
            medName.setForeground(Color.RED);
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void medName2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_medName2ItemStateChanged
        // TODO add your handling code here:
        Object selectedItem1 = medName2.getSelectedItem();
        if(!selectedItem1.toString().equals("None")){
            try{
                String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = DriverManager.getConnection(url, "root", "");
                Statement st = conn.createStatement();

                ResultSet rs = st.executeQuery("Select * from medicines where Name='"+selectedItem1.toString()+"'");

                while(rs.next()){
                    medUnit1.setText(rs.getString("Unit Number"));
                    medUnit1.setForeground(Color.BLACK);
                    medGroup2.setText(rs.getString("Med_Group"));
                    medGroup2.setForeground(Color.BLACK);
                    medCo2.setText(rs.getString("Company"));
                    medCo2.setForeground(Color.BLACK);   
                    med_ID = rs.getString("Medicine ID");
                }

                conn.close();

            } catch (Exception e){
                new dataNFDialogBox().setVisible(true);
            }
        } else {
            medUnit1.setText("Select a medicine name");
            medUnit1.setForeground(Color.decode("#999999"));
            medGroup2.setText("Select a medicine name");
            medGroup2.setForeground(Color.decode("#999999"));
            medCo2.setText("Select a medicine name");
            medCo2.setForeground(Color.decode("#999999"));
        }
        
    }//GEN-LAST:event_medName2ItemStateChanged

    private void dealerNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dealerNameItemStateChanged
        // TODO add your handling code here:
        Object selectedItem2 = dealerName.getSelectedItem();
        if(!selectedItem2.toString().equals("None")){
            try{
                String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = DriverManager.getConnection(url, "root", "");
                Statement st = conn.createStatement();

                ResultSet rs = st.executeQuery("Select * from dealers where Name='"+selectedItem2.toString()+"'");

                while(rs.next()){
                    dealerGST.setText(rs.getString("GST Number"));
                    dealerGST.setForeground(Color.BLACK);
                    dealerMobNo.setText(rs.getString("Mobile Number"));
                    dealerMobNo.setForeground(Color.BLACK);
                    del_ID = rs.getString("Dealer ID");
                }

                conn.close();

            } catch (Exception e){
                new dataNFDialogBox().setVisible(true);
            }
        } else {
            dealerGST.setText("Select a dealer name!");
            dealerGST.setForeground(Color.decode("#999999"));
            dealerMobNo.setText("Select a dealer name!");
            dealerMobNo.setForeground(Color.decode("#999999"));
        }
    }//GEN-LAST:event_dealerNameItemStateChanged

    private void grandTotal1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_grandTotal1FocusLost
        // TODO add your handling code here:
        if(!grandTotal1.getText().equals("Purchase Price(Incl.)")){
            grandTotal1.setForeground(Color.BLACK);
        } else {
            grandTotal1.setForeground(Color.decode("#999999"));
        }
    }//GEN-LAST:event_grandTotal1FocusLost

    private void submitPurchaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitPurchaseMouseClicked
        // TODO add your handling code here:
        Object ob1 = medName2.getSelectedItem();
        Object ob2 = dealerName.getSelectedItem();
        
        if(ob1.toString().equals("None")){
            new NoneFieldErrDialogBox("medicine name").setVisible(true);
        } else if(ob2.toString().equals("None")){
            new NoneFieldErrDialogBox("dealer name").setVisible(true);
        } else {
            try {
                String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = DriverManager.getConnection(url, "root", "");
                Statement st = conn.createStatement();
                
                SimpleDateFormat sd = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                Calendar cal2 = Calendar.getInstance();
                String purchase_date = sd.format(cal2.getTime());
                String exp_date = sd.format(expDate.getCurrent().getTime());
                String Qty = medQuantity2.getText();
                // Check if medicine already purchased before in the past....
                ResultSet rs = st.executeQuery("SELECT p.`Purchase ID` as 'Purchase ID', p.Med_ID as 'Medicine ID', p.Quantity as 'Quantity', p.Grand_Total as 'Total' FROM purchased_medicine_details p, medicines m where p.Med_ID=m.`Medicine ID` and m.Name='"+ob1.toString()+"' and m.Med_Group='"+medGroup2.getText()+"' and m.Company='"+medCo2.getText()+"' and p.Dealer_ID = (Select `Dealer ID` from dealers where Name='"+ob2.toString()+"')");
                if(rs.next()){
                    med_ID = rs.getString("Medicine ID");
                    st.executeUpdate("update purchased_medicine_details SET Quantity = '"+Integer.toString(Integer.valueOf(rs.getString("Quantity"))+Integer.valueOf(Qty))+"' ,Grand_Total='"+String.valueOf(Double.valueOf(rs.getString("Total"))+Double.valueOf(grandTotal1.getText()))+"', Purchase_Date = '"+purchase_date+"', Expiry_date='"+exp_date+"', Dealer_ID = "+del_ID+", `Invoice No.`= '"+exclInvoice.getText()+"' where `Purchase ID`="+rs.getString("Purchase ID"));       
                } else {
                    String query = "insert into purchased_medicine_details values(0, "+med_ID+", "+del_ID+", '"+exclInvoice.getText()+"', "+medQuantity2.getText()+", '"+String.valueOf(Double.valueOf(mrpText1.getText())-Integer.valueOf(GST1.getText())*Double.valueOf(mrpText1.getText())/100.0)+"', '"+SPText.getText()+"', '"+grandTotal1.getText()+"', '"+GST1.getText()+"', '"+purchase_date+"', '"+exp_date+"')";
                    st.executeUpdate(query);
                }
                
                st.executeUpdate("insert into purchase_medicine_history_details values(0, "+med_ID+", "+del_ID+", '"+exclInvoice.getText()+"', "+medQuantity2.getText()+", '"+mrpText1.getText()+"', '"+SPText.getText()+"', '"+grandTotal1.getText()+"', '"+GST1.getText()+"', '"+purchase_date+"', '"+exp_date+"')");

                new addDealerDialogBox("Purchase").setVisible(true);

                //close database server
                conn.close();

            } catch (Exception e) {
                new DBDownDialogBox().setVisible(true);
                System.out.println("Purchase Medicine Module\n----------------------------------------\n"+e);
            }
        }
    }//GEN-LAST:event_submitPurchaseMouseClicked
    
    private String med_exp = "";
    
    private void medName1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_medName1ItemStateChanged
        // TODO add your handling code here:
        Object selectedItem1 = medName1.getSelectedItem();
        if(!selectedItem1.toString().equals("None")){
            try{
                String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = DriverManager.getConnection(url, "root", "");
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery("Select * from medicines where Name='"+selectedItem1.toString()+"'");
                
                if(rs.next()){
                    med_ID = rs.getString("Medicine ID");
                    medUnit.setText(rs.getString("Unit Number"));
                    medUnit.setForeground(Color.BLACK);
                    medGroup1.setText(rs.getString("Med_Group"));
                    medGroup1.setForeground(Color.BLACK);
                    medCo1.setText(rs.getString("Company"));
                    medCo1.setForeground(Color.BLACK);  
                } else {
                    new dataNFDialogBox().setVisible(true);
                }
                
                rs.close();
                
                String soldQTY = "";
                ResultSet rs0 = st.executeQuery("Select nvl(sum(Qty), 0) as soldQTY from sold_medicine_details where Med_ID = "+med_ID);
                if(rs0.next()){
                    soldQTY = rs0.getString("soldQTY");
                }
                
                ResultSet rs1 = st.executeQuery("SELECT Expiry_date, MRP, Quantity from purchased_medicine_details  where Med_ID="+med_ID);

                if(rs1.next()){  
                    
                    mrpText.setText(rs1.getString("MRP"));
                    mrpText.setForeground(Color.BLACK);
                    med_q = String.valueOf(Integer.valueOf(rs1.getString("Quantity"))-Integer.valueOf(soldQTY));
                    med_exp = rs1.getString("Expiry_date");
                } else {
                    mrpText.setText("Don't have enough supplies!");
                    mrpText.setForeground(Color.RED);
                }
                rs.close();
                conn.close();

            } catch (Exception e){
                new DBDownDialogBox().setVisible(true);
            }
        } else {
            medUnit.setText("Select a medicine name");
            medUnit.setForeground(Color.decode("#999999"));
            medGroup1.setText("Select a medicine name");
            medGroup1.setForeground(Color.decode("#999999"));
            medCo1.setText("Select a medicine name");
            medCo1.setForeground(Color.decode("#999999"));
            mrpText.setText("Select a medicine name");
            mrpText.setForeground(Color.decode("#999999"));
        }
    }//GEN-LAST:event_medName1ItemStateChanged

    private String c_ID = "";
    
    private void custNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_custNameItemStateChanged
        // TODO add your handling code here:
        Object selectedItem1 = custName.getSelectedItem();
        if(!selectedItem1.toString().equals("None")){
            try{
                String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = DriverManager.getConnection(url, "root", "");
                Statement st = conn.createStatement();

                ResultSet rs = st.executeQuery("Select * from customers where Name='"+selectedItem1.toString()+"'");

                while(rs.next()){
                    mobNo.setText(rs.getString("Contact No."));
                    mobNo.setForeground(Color.BLACK); 
                    c_ID = rs.getString("Customer ID");
                }

                conn.close();

            } catch (Exception e){
                new DBDownDialogBox().setVisible(true);
            }
        } else {
            mobNo.setText("Select a customer name");
            mobNo.setForeground(Color.decode("#999999"));
        }
    }//GEN-LAST:event_custNameItemStateChanged

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        // TODO add your handling code here:
        jButton1.setForeground(Color.decode("#F81E9A"));
        jButton1.setBackground(Color.WHITE);
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        // TODO add your handling code here:
        jButton1.setForeground(Color.WHITE);
        jButton1.setBackground(Color.decode("#F81E9A"));
    }//GEN-LAST:event_jButton1MouseExited

    private void submitPurchaseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitPurchaseMouseEntered
        // TODO add your handling code here:
        if(GST1.getText().equals("")){
            GST1.setText("Enter GST in % here");
            GST1.setForeground(Color.decode("#999999"));
        } else {
            double purchasePrice = Double.valueOf(SPText.getText());
            double gst_perc = Double.valueOf(GST1.getText().split("%")[0]);
            if(purchasePrice > 0){
                if(gst_perc > 0){
                    grandTotal1.setText(Double.toString(Double.valueOf(medQuantity2.getText())*purchasePrice+gst_perc*Double.valueOf(medQuantity2.getText())*purchasePrice/100));
                    grandTotal1.setForeground(Color.BLACK);
                } else {
                    SPText.setText("Enter GST in % here");
                    SPText.setForeground(Color.decode("#999999"));
                    new ZeroOrEmptyFieldDialogBox("GST").setVisible(true);
                }
            } else {
                GST1.setText("Enter GST in % here");
                GST1.setForeground(Color.decode("#999999"));
                new ZeroOrEmptyFieldDialogBox("Purchase price").setVisible(true);
            }
        }
        submitPurchase.setForeground(Color.decode("#F81E9A"));
        submitPurchase.setBackground(Color.WHITE);
    }//GEN-LAST:event_submitPurchaseMouseEntered

    private void billGenBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billGenBtnMouseEntered
        // TODO add your handling code here:
        billGenBtn.setForeground(Color.decode("#F81E9A"));
        billGenBtn.setBackground(Color.WHITE);
        if(GST.getText().equals("")){
            GST.setText("Enter GST in % here");
            GST.setForeground(Color.decode("#999999"));
        } else {
            double sellingPrice = Double.valueOf(mrpText.getText());
            double gst_perc = Double.valueOf(GST.getText().split("%")[0]);
            if(sellingPrice > 0){
                if(gst_perc > 0){
                    grandTotal.setText(Double.toString(Double.valueOf(medQuantity1.getText())*sellingPrice+gst_perc*Double.valueOf(medQuantity1.getText())*sellingPrice/100));
                    grandTotal.setForeground(Color.BLACK);
                } else {
                    GST.setText("Enter GST in % here");
                    GST.setForeground(Color.decode("#999999"));
                    new ZeroOrEmptyFieldDialogBox("GST").setVisible(true);
                }
            } else {
                GST.setText("Enter GST in % here");
                GST.setForeground(Color.decode("#999999"));
                new ZeroOrEmptyFieldDialogBox("Purchase price").setVisible(true);
            }
        }
    }//GEN-LAST:event_billGenBtnMouseEntered

    private void billGenBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billGenBtnMouseExited
        // TODO add your handling code here:
        billGenBtn.setForeground(Color.WHITE);
        billGenBtn.setBackground(Color.decode("#F81E9A"));
    }//GEN-LAST:event_billGenBtnMouseExited

    private void submitPurchaseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitPurchaseMouseExited
        // TODO add your handling code here:
        submitPurchase.setForeground(Color.WHITE);
        submitPurchase.setBackground(Color.decode("#F81E9A"));
    }//GEN-LAST:event_submitPurchaseMouseExited
    
    private ArrayList<List> parentTableContents  = new ArrayList();
    
    private void billGenBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billGenBtnMouseClicked
        // TODO add your handling code here:
        Object ob1 = medName1.getSelectedItem();
        Object ob2 = custName.getSelectedItem();
        
        if(ob1.toString().equals("None")){
            new NoneFieldErrDialogBox("medicine name").setVisible(true);
        } else if(ob2.toString().equals("None")){
            new NoneFieldErrDialogBox("customer name").setVisible(true);
        } else {
            try {                               
                SimpleDateFormat sd = new SimpleDateFormat("dd/MM/yyyy");
                SimpleDateFormat sd2 = new SimpleDateFormat("hh:mm:ss a");
                Calendar cal2 = Calendar.getInstance();
                String selling_date = sd.format(cal2.getTime());
                String selling_time = sd2.format(cal2.getTime());
                
                List<String> sell_info = new ArrayList<String>();
                sell_info.add(med_ID);
                sell_info.add(c_ID);
                sell_info.add(ob1.toString());
                sell_info.add(medGroup1.getText());
                sell_info.add(medCo1.getText());
                sell_info.add(medQuantity1.getText());
                sell_info.add(mrpText.getText());
                sell_info.add(medUnit.getText());
                sell_info.add(ob2.toString());
                sell_info.add(mobNo.getText());
                sell_info.add(selling_date);
                sell_info.add(GST.getText());
                sell_info.add(grandTotal.getText());
                sell_info.add(selling_time);
                
                parentTableContents.add(sell_info);
                
                
                new ConfirmationDialogBox(parentTableContents, "1").setVisible(true);
                populateSellMedComboBox();
                medQuantity1.setText("Enter quantity(number) here");
                medQuantity1.setForeground(Color.decode("#999999"));
                medUnit.setText("Select a medicine name");
                medUnit.setForeground(Color.decode("#999999"));
                medGroup1.setText("Select a medicine name");
                medGroup1.setForeground(Color.decode("#999999"));
                medCo1.setText("Select a medicine name");
                medCo1.setForeground(Color.decode("#999999"));
                mrpText.setText("Select a medicine name");
                mrpText.setForeground(Color.decode("#999999"));
                mobNo.setText("Select a customer name");
                mobNo.setForeground(Color.decode("#999999"));
                GST.setText("Enter GST in % here");
                GST.setForeground(Color.decode("#999999"));
                grandTotal.setText("MRP(incl.)");
                grandTotal.setForeground(Color.decode("#999999"));
                
                 

            } catch (Exception e) {
                new DBDownDialogBox().setVisible(true);
                System.out.println(e+"\n");
//                for (int i=0; i< parentTableContents.size(); i++){
//                    System.out.println(parentTableContents.get(i).get(2).toString()
//                    +parentTableContents.get(i).get(3).toString()
//                    +parentTableContents.get(i).get(4).toString()
//                    +parentTableContents.get(i).get(5).toString()+"\nSize of List is "+parentTableContents.size()+"\n");
//                }
            }
        }
    }//GEN-LAST:event_billGenBtnMouseClicked

    private void clrListBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clrListBtnMouseClicked
        // TODO add your handling code here:
        while(parentTableContents.size()!=0){
            parentTableContents.remove(0);
        }
        new ListClearAlert().setVisible(true);
        populateSellMedComboBox();
    }//GEN-LAST:event_clrListBtnMouseClicked

    private void clrListBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clrListBtnMouseEntered
        // TODO add your handling code here:
        clrListBtn.setForeground(Color.decode("#F81E9A"));
        clrListBtn.setBackground(Color.WHITE);
    }//GEN-LAST:event_clrListBtnMouseEntered

    private void clrListBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clrListBtnMouseExited
        // TODO add your handling code here:
        clrListBtn.setForeground(Color.WHITE);
        clrListBtn.setBackground(Color.decode("#F81E9A"));
    }//GEN-LAST:event_clrListBtnMouseExited

    private void jLabel39MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel39MouseClicked
        // TODO add your handling code here:
        try{
            String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(url, "root", "");
            Statement st = conn.createStatement();
            
            String searchText = searchPMedText.getText();
            
            ResultSet rs = st.executeQuery("select m.`Medicine ID` as 'Medicine ID',m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', p.Quantity as 'Quantity', m.Company, d.Name, d.`Mobile Number` as 'Mobile Number', p.Purchase_date as 'Purchase Date', p.Purchase_Price as 'Purchase Price', p.MRP as 'MRP(excl)'  from purchase_medicine_history_details p , dealers d, medicines m where p.Med_Id=m.`Medicine ID` and p.Dealer_ID = d.`Dealer ID`");
            switch (filterVar) {
                case "ID":
                    rs = searchText.equals("") ? st.executeQuery("select m.`Medicine ID` as 'Medicine ID',m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', p.Quantity as 'Quantity', m.Company as 'Company Name', d.Name as 'Dealer Name', d.`Mobile Number` as 'Mobile Number', p.Purchase_date as 'Purchase Date', p.Purchase_Price as 'Purchase Price', p.MRP as 'MRP(excl)'   from purchase_medicine_history_details p , dealers d, medicines m where p.Med_Id=m.`Medicine ID` and p.Dealer_ID = d.`Dealer ID`") : st.executeQuery("select m.`Medicine ID` as 'Medicine ID',m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', p.Quantity as 'Quantity', m.Company as 'Company Name', d.Name as 'Dealer Name', d.`Mobile Number` as 'Mobile Number', p.Purchase_date as 'Purchase Date', p.Purchase_Price as 'Purchase Price', p.MRP as 'MRP(excl)'   from purchase_medicine_history_details p , dealers d, medicines m where p.Med_Id=m.`Medicine ID` and p.Dealer_ID = d.`Dealer ID` and m.`Medicine ID` REGEXP '"+searchText+"'");
                    break;
                case "medName":
                    rs = searchText.equals("") ? st.executeQuery("select m.`Medicine ID` as 'Medicine ID',m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', p.Quantity as 'Quantity', m.Company as 'Company Name', d.Name as 'Dealer Name', d.`Mobile Number` as 'Mobile Number', p.Purchase_date as 'Purchase Date', p.Purchase_Price as 'Purchase Price', p.MRP as 'MRP(excl)'   from purchase_medicine_history_details p , dealers d, medicines m where p.Med_Id=m.`Medicine ID` and p.Dealer_ID = d.`Dealer ID`") : st.executeQuery("select m.`Medicine ID` as 'Medicine ID',m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', p.Quantity as 'Quantity', m.Company as 'Company Name', d.Name as 'Dealer Name', d.`Mobile Number` as 'Mobile Number', p.Purchase_date as 'Purchase Date', p.Purchase_Price as 'Purchase Price', p.MRP as 'MRP(excl)'   from purchase_medicine_history_details p , dealers d, medicines m where p.Med_Id=m.`Medicine ID` and p.Dealer_ID = d.`Dealer ID` and m.Name REGEXP '^"+searchText+"'");
                    break;
                case "d_contact":
                    rs = searchText.equals("") ? st.executeQuery("select m.`Medicine ID` as 'Medicine ID',m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', p.Quantity as 'Quantity', m.Company as 'Company Name', d.Name as 'Dealer Name', d.`Mobile Number` as 'Mobile Number', p.Purchase_date as 'Purchase Date', p.Purchase_Price as 'Purchase Price', p.MRP as 'MRP(excl)'   from purchase_medicine_history_details p , dealers d, medicines m where p.Med_Id=m.`Medicine ID` and p.Dealer_ID = d.`Dealer ID`") :  st.executeQuery("select m.`Medicine ID` as 'Medicine ID',m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', p.Quantity as 'Quantity', m.Company as 'Company Name', d.Name as 'Dealer Name', d.`Mobile Number` as 'Mobile Number', p.Purchase_date as 'Purchase Date', p.Purchase_Price as 'Purchase Price', p.MRP as 'MRP(excl)'   from purchase_medicine_history_details p , dealers d, medicines m where p.Med_Id=m.`Medicine ID` and p.Dealer_ID = d.`Dealer ID` and d.`Mobile Number` REGEXP '^"+searchText+"'");
                    break;
                case "d_name":
                    rs = searchText.equals("") ? st.executeQuery("select m.`Medicine ID` as 'Medicine ID',m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', p.Quantity as 'Quantity', m.Company as 'Company Name', d.Name as 'Dealer Name', d.`Mobile Number` as 'Mobile Number', p.Purchase_date as 'Purchase Date', p.Purchase_Price as 'Purchase Price', p.MRP as 'MRP(excl)'   from purchase_medicine_history_details p , dealers d, medicines m where p.Med_Id=m.`Medicine ID` and p.Dealer_ID = d.`Dealer ID`") :  st.executeQuery("select m.`Medicine ID` as 'Medicine ID',m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', p.Quantity as 'Quantity', m.Company as 'Company Name', d.Name as 'Dealer Name', d.`Mobile Number` as 'Mobile Number', p.Purchase_date as 'Purchase Date', p.Purchase_Price as 'Purchase Price', p.MRP as 'MRP(excl)'   from purchase_medicine_history_details p , dealers d, medicines m where p.Med_Id=m.`Medicine ID` and p.Dealer_ID = d.`Dealer ID` and d.Name REGEXP '^"+searchText+"'");
                    break;
                case "date":
                    rs = searchText.equals("") ? st.executeQuery("select m.`Medicine ID` as 'Medicine ID',m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', p.Quantity as 'Quantity', m.Company as 'Company Name', d.Name as 'Dealer Name', d.`Mobile Number` as 'Mobile Number', p.Purchase_date as 'Purchase Date', p.Purchase_Price as 'Purchase Price', p.MRP as 'MRP(excl)'   from purchase_medicine_history_details p , dealers d, medicines m where p.Med_Id=m.`Medicine ID` and p.Dealer_ID = d.`Dealer ID`") :  st.executeQuery("select m.`Medicine ID` as 'Medicine ID',m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', p.Quantity as 'Quantity', m.Company as 'Company Name', d.Name as 'Dealer Name', d.`Mobile Number` as 'Mobile Number', p.Purchase_date as 'Purchase Date', p.Purchase_Price as 'Purchase Price', p.MRP as 'MRP(excl)'   from purchase_medicine_history_details p , dealers d, medicines m where p.Med_Id=m.`Medicine ID` and p.Dealer_ID = d.`Dealer ID` and p.Purchase_date REGEXP '^"+searchText+"'");
                    break;
                case "c_name":
                    rs = searchText.equals("") ? st.executeQuery("select m.`Medicine ID` as 'Medicine ID',m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', p.Quantity as 'Quantity', m.Company as 'Company Name', d.Name as 'Dealer Name', d.`Mobile Number` as 'Mobile Number', p.Purchase_date as 'Purchase Date', p.Purchase_Price as 'Purchase Price', p.MRP as 'MRP(excl)'   from purchase_medicine_history_details p , dealers d, medicines m where p.Med_Id=m.`Medicine ID` and p.Dealer_ID = d.`Dealer ID`") :  st.executeQuery("select m.`Medicine ID` as 'Medicine ID',m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', p.Quantity as 'Quantity', m.Company as 'Company Name', d.Name as 'Dealer Name', d.`Mobile Number` as 'Mobile Number', p.Purchase_date as 'Purchase Date', p.Purchase_Price as 'Purchase Price', p.MRP as 'MRP(excl)'   from purchase_medicine_history_details p , dealers d, medicines m where p.Med_Id=m.`Medicine ID` and p.Dealer_ID = d.`Dealer ID` and m.Company REGEXP '^"+searchText+"'");
                    break;
                case "grp":
                    rs = searchText.equals("") ? st.executeQuery("select m.`Medicine ID` as 'Medicine ID',m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', p.Quantity as 'Quantity', m.Company as 'Company Name', d.Name as 'Dealer Name', d.`Mobile Number` as 'Mobile Number', p.Purchase_date as 'Purchase Date', p.Purchase_Price as 'Purchase Price', p.MRP as MRP(excl)   from purchase_medicine_history_details p , dealers d, medicines m where p.Med_Id=m.`Medicine ID` and p.Dealer_ID = d.`Dealer ID`") :  st.executeQuery("select m.`Medicine ID` as 'Medicine ID',m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', p.Quantity as 'Quantity', m.Company as 'Company Name', d.Name as 'Dealer Name', d.`Mobile Number` as 'Mobile Number', p.Purchase_date as 'Purchase Date', p.Purchase_Price as 'Purchase Price', p.MRP as MRP(excl)   from purchase_medicine_history_details p , dealers d, medicines m where p.Med_Id=m.`Medicine ID` and p.Dealer_ID = d.`Dealer ID` and m.Med_Group REGEXP '^"+searchText+"'");
                    break;
                default:
                    if(searchText.equals("Enter mobile number here") || searchText.equals("Select a filter to search") || searchText.equals("Enter medicine name here") || searchText.equals("Enter medicine ID here") || searchText.equals("Enter dealer's name here") || searchText.equals("Enter purchase date(dd/MM/YYYY) here") || searchText.equals("Enter company name here") || searchText.equals("Enter group name here")){
                        rs = st.executeQuery("select m.`Medicine ID` as 'Medicine ID',m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', p.Quantity as 'Quantity', m.Company as 'Company Name', d.Name as 'Dealer Name', d.`Mobile Number` as 'Mobile Number', p.Purchase_date as 'Purchase Date', p.Purchase_Price as 'Purchase Price', p.MRP as 'MRP(excl)'  from purchase_medicine_history_details p , dealers d, medicines m where p.Med_Id=m.`Medicine ID` and p.Dealer_ID = d.`Dealer ID`");
                    } else {
                        new dataNFDialogBox().setVisible(true);
                    }
                    break;
            }
            if(!rs.next()){
                new dataNFDialogBox().setVisible(true);
            } else {
                rs.beforeFirst();
                purchaseMedTable.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            conn.close();

        } catch (Exception e){
            new DBDownDialogBox().setVisible(true);
        }
    }//GEN-LAST:event_jLabel39MouseClicked

    private void jLabel41MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel41MouseClicked
        // TODO add your handling code here:
        try{
            String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(url, "root", "");
            Statement st = conn.createStatement();
            
            String searchText = searchSMedText2.getText();
            
            ResultSet rs = st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID`");
            switch (filterVar) {
                case "bill":
                    rs = searchText.equals("") ? st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID`") : st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID` and s.`Bill Number` REGEXP '^"+searchText+"'");
                    break;
                case "ID":
                    rs = searchText.equals("") ? st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID`") : st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID` and s.Med_ID REGEXP '^"+searchText+"'");
                    break;
                case "name":
                    rs = searchText.equals("") ? st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID`") : st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID` and m.Name REGEXP '^"+searchText+"'");
                    break;
                case "contact":
                    rs = searchText.equals("") ? st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID`") :  st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID` and c.`Contact No.` REGEXP '^"+searchText+"'");
                    break;
                case "c_name":
                    rs = searchText.equals("") ? st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID`") :  st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID` and m.Company REGEXP '^"+searchText+"'");
                    break;
                case "date":
                    rs = searchText.equals("") ? st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID`") :  st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID` and s.Purchase_date REGEXP '^"+searchText+"'");
                    break;
                case "cust_name":
                    rs = searchText.equals("") ? st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID`") :  st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID` and c.Name REGEXP '^"+searchText+"'");
                    break;
                case "grp":
                    rs = searchText.equals("") ? st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID`") :  st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID` and m.Med_Group REGEXP '^"+searchText+"'");
                    break;
                case "time":
                    rs = searchText.equals("") ? st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID`") :  st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID` and s.Purchase_Time REGEXP '^"+searchText+"'");
                    break;
                default:
                    if(searchText.equals("Enter mobile number here") || searchText.equals("Enter hh(in 12-hr format) here") || searchText.equals("Select a filter to search") || searchText.equals("Enter medicine name here") || searchText.equals("Enter medicine ID here") || searchText.equals("Enter dealer's name here") || searchText.equals("Enter purchase date(dd/MM/YYYY) here") || searchText.equals("Enter bill number here")){
                        rs = st.executeQuery("select s.`Bill Number` as 'Bill Number', s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.`Unit Number` as 'Unit Number', s.Qty as 'Quantity', m.Company as 'Medicine Company', c.Name as 'Customer Name', c.`Contact No.` as 'Contact Number', s.Purchase_date as 'Billing Date', s.Applied_GST as 'GST', p.MRP*s.Qty as MRP, s.Grand_Total as 'MRP (incl.)', s.Purchase_Time as 'Time Of Purchase' from sold_medicine_details s, customers c, medicines m, purchased_medicine_details p where m.`Medicine ID` = s.Med_ID and p.Med_ID = s.Med_ID and s.Cust_ID = c.`Customer ID`");
                    } else {
                        new dataNFDialogBox().setVisible(true);
                    }
                    break;
            }
            if(!rs.next()){
                new dataNFDialogBox().setVisible(true);
            } else {
                rs.beforeFirst();
                soldMedTable.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            conn.close();

        } catch (Exception e){
            new DBDownDialogBox().setVisible(true);
        }
    }//GEN-LAST:event_jLabel41MouseClicked

    private void jLabel37MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel37MouseClicked
        // TODO add your handling code here:
        try{
            String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(url, "root", "");
            Statement st = conn.createStatement();
            
            String searchText = searchAMedText.getText();
            
            ResultSet rs = st.executeQuery("SELECT p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.Company as 'Company Name', CAST(p.Quantity-(SELECT nvl(sum(s.Qty),0) from sold_medicine_details s where s.Med_ID=p.Med_ID) as INT) as 'Quantity', p.Purchase_Price as 'Purchase Price (incl.)' ,p.MRP as 'MRP (excl.)' , p.Expiry_date as 'Expiry Date' FROM purchased_medicine_details p, medicines m where m.`Medicine ID`=p.Med_ID");
            switch (filterVar) {
                case "name":
                    rs = searchText.equals("") ? st.executeQuery("SELECT p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.Company as 'Company Name', CAST(p.Quantity-(SELECT nvl(sum(s.Qty),0) from sold_medicine_details s where s.Med_ID=p.Med_ID) as INT) as 'Quantity', p.Purchase_Price as 'Purchase Price (incl.)' ,p.MRP as 'MRP (excl.)' , p.Expiry_date as 'Expiry Date' FROM purchased_medicine_details p, medicines m where m.`Medicine ID`=p.Med_ID") : st.executeQuery("SELECT p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.Company as 'Company Name', CAST(p.Quantity-(SELECT nvl(sum(s.Qty),0) from sold_medicine_details s where s.Med_ID=p.Med_ID) as INT) as 'Quantity', p.Purchase_Price as 'Purchase Price (incl.)' ,p.MRP as 'MRP (excl.)' , p.Expiry_date as 'Expiry Date' FROM purchased_medicine_details p, medicines m where m.`Medicine ID`=p.Med_ID and m.Name REGEXP '^"+searchText+"'");
                    break;
                case "ID":
                    rs = searchText.equals("") ? st.executeQuery("SELECT p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.Company as 'Company Name', CAST(p.Quantity-(SELECT nvl(sum(s.Qty),0) from sold_medicine_details s where s.Med_ID=p.Med_ID) as INT) as 'Quantity', p.Purchase_Price as 'Purchase Price (incl.)' ,p.MRP as 'MRP (excl.)' , p.Expiry_date as 'Expiry Date' FROM purchased_medicine_details p, medicines m where m.`Medicine ID`=p.Med_ID") : st.executeQuery("SELECT p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.Company as 'Company Name', CAST(p.Quantity-(SELECT nvl(sum(s.Qty),0) from sold_medicine_details s where s.Med_ID=p.Med_ID) as INT) as 'Quantity', p.Purchase_Price as 'Purchase Price (incl.)' ,p.MRP as 'MRP (excl.)' , p.Expiry_date as 'Expiry Date' FROM purchased_medicine_details p, medicines m where m.`Medicine ID`=p.Med_ID and p.Med_ID REGEXP '^"+searchText+"'");
                    break;
                case "grp":
                    rs = searchText.equals("") ? st.executeQuery("SELECT p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.Company as 'Company Name', CAST(p.Quantity-(SELECT nvl(sum(s.Qty),0) from sold_medicine_details s where s.Med_ID=p.Med_ID) as INT) as 'Quantity', p.Purchase_Price as 'Purchase Price (incl.)' ,p.MRP as 'MRP (excl.)' , p.Expiry_date as 'Expiry Date' FROM purchased_medicine_details p, medicines m where m.`Medicine ID`=p.Med_ID") :  st.executeQuery("SELECT p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.Company as 'Company Name', CAST(p.Quantity-(SELECT nvl(sum(s.Qty),0) from sold_medicine_details s where s.Med_ID=p.Med_ID) as INT) as 'Quantity', p.Purchase_Price as 'Purchase Price (incl.)' ,p.MRP as 'MRP (excl.)' , p.Expiry_date as 'Expiry Date' FROM purchased_medicine_details p, medicines m where m.`Medicine ID`=p.Med_ID and m.Med_Group REGEXP '^"+searchText+"'");
                    break;
                case "c_name":
                    rs = searchText.equals("") ? st.executeQuery("SELECT p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.Company as 'Company Name', CAST(p.Quantity-(SELECT nvl(sum(s.Qty),0) from sold_medicine_details s where s.Med_ID=p.Med_ID) as INT) as 'Quantity', p.Purchase_Price as 'Purchase Price (incl.)' ,p.MRP as 'MRP (excl.)' , p.Expiry_date as 'Expiry Date' FROM purchased_medicine_details p, medicines m where m.`Medicine ID`=p.Med_ID") :  st.executeQuery("SELECT p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.Company as 'Company Name', CAST(p.Quantity-(SELECT nvl(sum(s.Qty),0) from sold_medicine_details s where s.Med_ID=p.Med_ID) as INT) as 'Quantity', p.Purchase_Price as 'Purchase Price (incl.)' ,p.MRP as 'MRP (excl.)' , p.Expiry_date as 'Expiry Date' FROM purchased_medicine_details p, medicines m where m.`Medicine ID`=p.Med_ID and m.Company REGEXP '^"+searchText+"'");
                    break;
                case "Qty":
                    rs = searchText.equals("") ? st.executeQuery("SELECT p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.Company as 'Company Name', CAST(p.Quantity-(SELECT nvl(sum(s.Qty),0) from sold_medicine_details s where s.Med_ID=p.Med_ID) as INT) as 'Quantity', p.Purchase_Price as 'Purchase Price (incl.)' ,p.MRP as 'MRP (excl.)' , p.Expiry_date as 'Expiry Date' FROM purchased_medicine_details p, medicines m where m.`Medicine ID`=p.Med_ID") :  st.executeQuery("SELECT p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.Company as 'Company Name', CAST(p.Quantity-(SELECT nvl(sum(s.Qty),0) from sold_medicine_details s where s.Med_ID=p.Med_ID) as INT) as 'Quantity', p.Purchase_Price as 'Purchase Price (incl.)' ,p.MRP as 'MRP (excl.)' , p.Expiry_date as 'Expiry Date' FROM purchased_medicine_details p, medicines m where m.`Medicine ID`=p.Med_ID and Quantity <= "+searchText);
                    break;
                case "date":
                    rs = searchText.equals("") ? st.executeQuery("SELECT p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.Company as 'Company Name', CAST(p.Quantity-(SELECT nvl(sum(s.Qty),0) from sold_medicine_details s where s.Med_ID=p.Med_ID) as INT) as 'Quantity', p.Purchase_Price as 'Purchase Price (incl.)' ,p.MRP as 'MRP (excl.)' , p.Expiry_date as 'Expiry Date' FROM purchased_medicine_details p, medicines m where m.`Medicine ID`=p.Med_ID") :  st.executeQuery("SELECT p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.Company as 'Company Name', CAST(p.Quantity-(SELECT nvl(sum(s.Qty),0) from sold_medicine_details s where s.Med_ID=p.Med_ID) as INT) as 'Quantity', p.Purchase_Price as 'Purchase Price (incl.)' ,p.MRP as 'MRP (excl.)' , p.Expiry_date as 'Expiry Date' FROM purchased_medicine_details p, medicines m where m.`Medicine ID`=p.Med_ID and p.Expiry_date REGEXP '^"+searchText+"'");
                    break;
                default:
                    if(searchText.equals("Enter quantity here") || searchText.equals("Select a filter to search") || searchText.equals("Enter medicine name here") || searchText.equals("Enter company name here") || searchText.equals("Enter group name here") || searchText.equals("Enter medicine ID here") || searchText.equals("Enter date(dd/MM/YYYY) here")){
                        rs = st.executeQuery("SELECT p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', m.Med_Group as 'Medicine Group', m.Company as 'Company Name', CAST(p.Quantity-(SELECT nvl(sum(s.Qty),0) from sold_medicine_details s where s.Med_ID=p.Med_ID) as INT) as 'Quantity', p.Purchase_Price as 'Purchase Price (incl.)' ,p.MRP as 'MRP (excl.)' , p.Expiry_date as 'Expiry Date' FROM purchased_medicine_details p, medicines m where m.`Medicine ID`=p.Med_ID");
                    } else {
                        new dataNFDialogBox().setVisible(true);
                    }
                    break;
            }
            if(!rs.next()){
                new dataNFDialogBox().setVisible(true);
            } else {
                rs.beforeFirst();
                availableMedTable.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            conn.close();

        } catch (Exception e){
            new DBDownDialogBox().setVisible(true);
            System.out.println("Purchased Medicine Details Error\n------------------------------------------\n"+e);
        }
    }//GEN-LAST:event_jLabel37MouseClicked

    private void jLabel42MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel42MouseClicked
        // TODO add your handling code here:
        try{
            String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(url, "root", "");
            Statement st = conn.createStatement();
            
            String searchText = PGSearchText.getText();
            
            ResultSet rs = st.executeQuery("select p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', d.`GST Number` as 'GSTIN', p.Paid_GST as 'GST Paid', p.Grand_Total as 'Grand Total(incl.)', d.Name as 'Dealer Name', p.`Invoice No.` as 'External Invoice', p.Purchase_date as 'Purchase Date' from purchase_medicine_history_details p, medicines m, dealers d where m.`Medicine ID`=p.Med_ID and d.`Dealer ID`= p.Dealer_ID");
            switch (filterVar) {
                case "ID":
                    rs = searchText.equals("") ? st.executeQuery("select p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', d.`GST Number` as 'GSTIN', p.Paid_GST as 'GST Paid', p.Grand_Total as 'Grand Total(incl.)', d.Name as 'Dealer Name', p.`Invoice No.` as 'External Invoice', p.Purchase_date as 'Purchase Date' from purchase_medicine_history_details p, medicines m, dealers d where m.`Medicine ID`=p.Med_ID and d.`Dealer ID`= p.Dealer_ID") : st.executeQuery("select p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', d.`GST Number` as 'GSTIN', p.Paid_GST as 'GST Paid', p.Grand_Total as 'Grand Total(incl.)', d.Name as 'Dealer Name', p.`Invoice No.` as 'External Invoice', p.Purchase_date as 'Purchase Date' from purchase_medicine_history_details p, medicines m, dealers d where m.`Medicine ID`=p.Med_ID and d.`Dealer ID`= p.Dealer_ID and p.Med_ID REGEXP '^"+searchText+"'");
                    break;
                case "name":
                    rs = searchText.equals("") ? st.executeQuery("select p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', d.`GST Number` as 'GSTIN', p.Paid_GST as 'GST Paid', p.Grand_Total as 'Grand Total(incl.)', d.Name as 'Dealer Name', p.`Invoice No.` as 'External Invoice', p.Purchase_date as 'Purchase Date' from purchase_medicine_history_details p, medicines m, dealers d where m.`Medicine ID`=p.Med_ID and d.`Dealer ID`= p.Dealer_ID") : st.executeQuery("select p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', d.`GST Number` as 'GSTIN', p.Paid_GST as 'GST Paid', p.Grand_Total as 'Grand Total(incl.)', d.Name as 'Dealer Name', p.`Invoice No.` as 'External Invoice', p.Purchase_date as 'Purchase Date' from purchase_medicine_history_details p, medicines m, dealers d where m.`Medicine ID`=p.Med_ID and d.`Dealer ID`= p.Dealer_ID and m.Name REGEXP '^"+searchText+"'");
                    break;
                case "invoice":
                    rs = searchText.equals("") ? st.executeQuery("select p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', d.`GST Number` as 'GSTIN', p.Paid_GST as 'GST Paid', p.Grand_Total as 'Grand Total(incl.)', d.Name as 'Dealer Name', p.`Invoice No.` as 'External Invoice', p.Purchase_date as 'Purchase Date' from purchase_medicine_history_details p, medicines m, dealers d where m.`Medicine ID`=p.Med_ID and d.`Dealer ID`= p.Dealer_ID") :  st.executeQuery("select p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', d.`GST Number` as 'GSTIN', p.Paid_GST as 'GST Paid', p.Grand_Total as 'Grand Total(incl.)', d.Name as 'Dealer Name', p.`Invoice No.` as 'External Invoice', p.Purchase_date as 'Purchase Date' from purchase_medicine_history_details p, medicines m, dealers d where m.`Medicine ID`=p.Med_ID and d.`Dealer ID`= p.Dealer_ID and p.`Invoice No.` REGEXP '^"+searchText+"'");
                    break;
                case "date":
                    rs = searchText.equals("") ? st.executeQuery("select p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', d.`GST Number` as 'GSTIN', p.Paid_GST as 'GST Paid', p.Grand_Total as 'Grand Total(incl.)', d.Name as 'Dealer Name', p.`Invoice No.` as 'External Invoice', p.Purchase_date as 'Purchase Date' from purchase_medicine_history_details p, medicines m, dealers d where m.`Medicine ID`=p.Med_ID and d.`Dealer ID`= p.Dealer_ID") :  st.executeQuery("select p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', d.`GST Number` as 'GSTIN', p.Paid_GST as 'GST Paid', p.Grand_Total as 'Grand Total(incl.)', d.Name as 'Dealer Name', p.`Invoice No.` as 'External Invoice', p.Purchase_date as 'Purchase Date' from purchase_medicine_history_details p, medicines m, dealers d where m.`Medicine ID`=p.Med_ID and d.`Dealer ID`= p.Dealer_ID and p.Purchase_date REGEXP '^"+searchText+"'");
                    break;
                case "gst":
                    rs = searchText.equals("") ? st.executeQuery("select p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', d.`GST Number` as 'GSTIN', p.Paid_GST as 'GST Paid', p.Grand_Total as 'Grand Total(incl.)', d.Name as 'Dealer Name', p.`Invoice No.` as 'External Invoice', p.Purchase_date as 'Purchase Date' from purchase_medicine_history_details p, medicines m, dealers d where m.`Medicine ID`=p.Med_ID and d.`Dealer ID`= p.Dealer_ID") :  st.executeQuery("select p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', d.`GST Number` as 'GSTIN', p.Paid_GST as 'GST Paid', p.Grand_Total as 'Grand Total(incl.)', d.Name as 'Dealer Name', p.`Invoice No.` as 'External Invoice', p.Purchase_date as 'Purchase Date' from purchase_medicine_history_details p, medicines m, dealers d where m.`Medicine ID`=p.Med_ID and d.`Dealer ID`= p.Dealer_ID and d.`GST Number` REGEXP '^"+searchText+"'");
                    break;
                case "d_name":
                    rs = searchText.equals("") ? st.executeQuery("select p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', d.`GST Number` as 'GSTIN', p.Paid_GST as 'GST Paid', p.Grand_Total as 'Grand Total(incl.)', d.Name as 'Dealer Name', p.`Invoice No.` as 'External Invoice', p.Purchase_date as 'Purchase Date' from purchase_medicine_history_details p, medicines m, dealers d where m.`Medicine ID`=p.Med_ID and d.`Dealer ID`= p.Dealer_ID") :  st.executeQuery("select p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', d.`GST Number` as 'GSTIN', p.Paid_GST as 'GST Paid', p.Grand_Total as 'Grand Total(incl.)', d.Name as 'Dealer Name', p.`Invoice No.` as 'External Invoice', p.Purchase_date as 'Purchase Date' from purchase_medicine_history_details p, medicines m, dealers d where m.`Medicine ID`=p.Med_ID and d.`Dealer ID`= p.Dealer_ID and d.Name REGEXP '^"+searchText+"'");
                    break;
                default:
                    if(searchText.equals("Enter dealer's name here") || searchText.equals("Enter GSTIN here") || searchText.equals("Select a filter to search") || searchText.equals("Enter medicine name here") || searchText.equals("Enter medicine ID here") || searchText.equals("Enter ext. invoice no. here") || searchText.equals("Enter purchase date(dd/MM/YYYY) here")){
                        rs = st.executeQuery("select p.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', d.`GST Number` as 'GSTIN', p.Paid_GST as 'GST Paid', p.Grand_Total as 'Grand Total(incl.)', d.Name as 'Dealer Name', p.`Invoice No.` as 'External Invoice', p.Purchase_date as 'Purchase Date' from purchase_medicine_history_details p, medicines m, dealers d where m.`Medicine ID`=p.Med_ID and d.`Dealer ID`= p.Dealer_ID");
                    } else {
                        new dataNFDialogBox().setVisible(true);
                    }
                    break;
            }
            if(!rs.next()){
                new dataNFDialogBox().setVisible(true);
            } else {
                rs.beforeFirst();
                purchaseGSTTable.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            conn.close();

        } catch (Exception e){
            new DBDownDialogBox().setVisible(true);
            System.out.println("Purchased GST Model\n------------------------------------------------\n"+e);
        }
    }//GEN-LAST:event_jLabel42MouseClicked

    private void jLabel43MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel43MouseClicked
        // TODO add your handling code here:
        try{
            String url = "jdbc:mysql://localhost:3306/medical_system?autoReconnect=true&useSSL=false";
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(url, "root", "");
            Statement st = conn.createStatement();
            
            String searchText = SGSearchText.getText();
            
            ResultSet rs = st.executeQuery("select s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', s.Qty as 'Quantity', s.Applied_GST as 'GST Applied', s.Grand_Total as 'Grand Total(incl.)', s.`Bill Number` as 'Bill Number', s.Purchase_Date as 'Billing Date' from sold_medicine_details s, medicines m where m.`Medicine ID`=s.Med_ID");
            switch (filterVar) {
                case "ID":
                    rs = searchText.equals("") ? st.executeQuery("select s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', s.Qty as 'Quantity', s.Applied_GST as 'GST Applied', s.Grand_Total as 'Grand Total(incl.)', s.`Bill Number` as 'Bill Number', s.Purchase_Date as 'Billing Date' from sold_medicine_details s, medicines m where m.`Medicine ID`=s.Med_ID") : st.executeQuery("select s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', s.Qty as 'Quantity', s.Applied_GST as 'GST Applied', s.Grand_Total as 'Grand Total(incl.)', s.`Bill Number` as 'Bill Number', s.Purchase_Date as 'Billing Date' from sold_medicine_details s, medicines m where m.`Medicine ID`=s.Med_ID and s.Med_ID REGEXP '^"+searchText);
                    break;
                case "name":
                    rs = searchText.equals("") ? st.executeQuery("select s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', s.Qty as 'Quantity', s.Applied_GST as 'GST Applied', s.Grand_Total as 'Grand Total(incl.)', s.`Bill Number` as 'Bill Number', s.Purchase_Date as 'Billing Date' from sold_medicine_details s, medicines m where m.`Medicine ID`=s.Med_ID") : st.executeQuery("select s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', s.Qty as 'Quantity', s.Applied_GST as 'GST Applied', s.Grand_Total as 'Grand Total(incl.)', s.`Bill Number` as 'Bill Number', s.Purchase_Date as 'Billing Date' from sold_medicine_details s, medicines m where m.`Medicine ID`=s.Med_ID and m.Name REGEXP '^"+searchText+"'");
                    break;
                case "bill":
                    rs = searchText.equals("") ? st.executeQuery("select s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', s.Qty as 'Quantity', s.Applied_GST as 'GST Applied', s.Grand_Total as 'Grand Total(incl.)', s.`Bill Number` as 'Bill Number', s.Purchase_Date as 'Billing Date' from sold_medicine_details s, medicines m where m.`Medicine ID`=s.Med_ID") :  st.executeQuery("select s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', s.Qty as 'Quantity', s.Applied_GST as 'GST Applied', s.Grand_Total as 'Grand Total(incl.)', s.`Bill Number` as 'Bill Number', s.Purchase_Date as 'Billing Date' from sold_medicine_details s, medicines m where m.`Medicine ID`=s.Med_ID and s.`Bill Number` = "+searchText);
                    break;
                case "date":
                    rs = searchText.equals("") ? st.executeQuery("select s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', s.Qty as 'Quantity', s.Applied_GST as 'GST Applied', s.Grand_Total as 'Grand Total(incl.)', s.`Bill Number` as 'Bill Number', s.Purchase_Date as 'Billing Date' from sold_medicine_details s, medicines m where m.`Medicine ID`=s.Med_ID") :  st.executeQuery("select s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', s.Qty as 'Quantity', s.Applied_GST as 'GST Applied', s.Grand_Total as 'Grand Total(incl.)', s.`Bill Number` as 'Bill Number', s.Purchase_Date as 'Billing Date' from sold_medicine_details s, medicines m where m.`Medicine ID`=s.Med_ID_ID and s.Purchase_date REGEXP '^"+searchText+"'");
                    break;
                default:
                    if(searchText.equals("Enter dealer's name here") || searchText.equals("Enter GSTIN here") || searchText.equals("Select a filter to search") || searchText.equals("Enter medicine name here") || searchText.equals("Enter medicine ID here") || searchText.equals("Enter ext. invoice no. here") || searchText.equals("Enter purchase date(dd/MM/YYYY) here")){
                        rs = st.executeQuery("select s.Med_ID as 'Medicine ID', m.Name as 'Medicine Name', s.Qty as 'Quantity', s.Applied_GST as 'GST Applied', s.Grand_Total as 'Grand Total(incl.)', s.`Bill Number` as 'Bill Number', s.Purchase_Date as 'Billing Date' from sold_medicine_details s, medicines m where m.`Medicine ID`=s.Med_ID");
                    } else {
                        new dataNFDialogBox().setVisible(true);
                    }
                    break;
            }
            if(!rs.next()){
                new dataNFDialogBox().setVisible(true);
            } else {
                rs.beforeFirst();
                soldGSTTable.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            conn.close();

        } catch (Exception e){
            new DBDownDialogBox().setVisible(true);
            System.out.println("Purchased GST Model\n------------------------------------------------\n"+e);
        }
    }//GEN-LAST:event_jLabel43MouseClicked

    private void printSoldGSTBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printSoldGSTBtnMouseEntered
        // TODO add your handling code here:
        printSoldGSTBtn.setForeground(Color.decode("#F81E9A"));
        printSoldGSTBtn.setBackground(Color.WHITE);
    }//GEN-LAST:event_printSoldGSTBtnMouseEntered

    private void printSoldGSTBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printSoldGSTBtnMouseExited
        // TODO add your handling code here:
        printSoldGSTBtn.setForeground(Color.WHITE);
        printSoldGSTBtn.setBackground(Color.decode("#F81E9A"));
    }//GEN-LAST:event_printSoldGSTBtnMouseExited

    private void printSoldGSTBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printSoldGSTBtnMouseClicked
        // TODO add your handling code here:
        try {
            MessageFormat header = new MessageFormat("Sold Medicine GST");
            MessageFormat footer = new MessageFormat("page(0, numnber, integer)");
            purchaseGSTTable.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch (PrinterException ex) {
            System.out.println("Sold GST panel printing error\n-----------------------------------------\n"+ex);
        }
    }//GEN-LAST:event_printSoldGSTBtnMouseClicked

    private void printPurchaseGSTBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printPurchaseGSTBtnMouseEntered
        // TODO add your handling code here:
        printPurchaseGSTBtn.setForeground(Color.decode("#F81E9A"));
        printPurchaseGSTBtn.setBackground(Color.WHITE);
    }//GEN-LAST:event_printPurchaseGSTBtnMouseEntered

    private void printPurchaseGSTBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printPurchaseGSTBtnMouseExited
        // TODO add your handling code here:
        printPurchaseGSTBtn.setForeground(Color.WHITE);
        printPurchaseGSTBtn.setBackground(Color.decode("#F81E9A"));
    }//GEN-LAST:event_printPurchaseGSTBtnMouseExited

    private void printPurchaseGSTBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printPurchaseGSTBtnMouseClicked
        try {
            MessageFormat header = new MessageFormat("Purchase Medicine GST");
            MessageFormat footer = new MessageFormat("page(0, numnber, integer)");
            purchaseGSTTable.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch (PrinterException ex) {
            System.out.println("Purchased GST panel printing error\n-----------------------------------------\n"+ex);
        }
    }//GEN-LAST:event_printPurchaseGSTBtnMouseClicked

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Signup_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Signup_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Signup_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Signup_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddCustomerPanel;
    private javax.swing.JPanel AddDealerPanel;
    private javax.swing.JPanel AddMedicinePanel;
    private javax.swing.JPanel AvailableMedicinePanel;
    private javax.swing.JTextField GST;
    private javax.swing.JTextField GST1;
    private javax.swing.JPanel HomePanel;
    private javax.swing.JComboBox<String> PGFilter;
    private javax.swing.JTextField PGSearchText;
    private javax.swing.JPanel PurchaseMedicinePanel;
    private javax.swing.JPanel PurchasedGSTPanel;
    private javax.swing.JPanel PurchasedMedicinePanel;
    private javax.swing.JComboBox<String> SGFilter;
    private javax.swing.JTextField SGSearchText;
    private javax.swing.JTextField SPText;
    private javax.swing.JPanel SellMedicinePanel;
    private javax.swing.JPanel ShowCustomerPanel;
    private javax.swing.JPanel ShowDealerPanel;
    private javax.swing.JPanel SoldGSTPanel;
    private javax.swing.JPanel SoldMedicinePanel;
    private javax.swing.JComboBox<String> aMedFilter;
    private javax.swing.JButton addCustBtn;
    private javax.swing.JButton addDealerButton;
    private javax.swing.JTable availableMedTable;
    private javax.swing.JButton billGenBtn;
    private javax.swing.JPanel buttonContainer;
    private javax.swing.JButton clrListBtn;
    private javax.swing.JTextArea custAddr;
    private javax.swing.JComboBox<String> custFilter;
    private javax.swing.JTextField custMobNo;
    private javax.swing.JComboBox<String> custName;
    private javax.swing.JTextField custName1;
    private javax.swing.JTable custTable;
    private javax.swing.JLabel dafadf;
    private javax.swing.JTextArea dealerAddr1;
    private javax.swing.JComboBox<String> dealerFilter;
    private javax.swing.JTextField dealerGST;
    private javax.swing.JTextField dealerGST1;
    private javax.swing.JTextField dealerMobNo;
    private javax.swing.JTextField dealerMobNo1;
    private javax.swing.JComboBox<String> dealerName;
    private javax.swing.JTextField dealerName1;
    private javax.swing.JTable dealersTable;
    private javax.swing.JTextField exclInvoice;
    private datechooser.beans.DateChooserCombo expDate;
    private javax.swing.JTextField grandTotal;
    private javax.swing.JTextField grandTotal1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField medCo;
    private javax.swing.JTextField medCo1;
    private javax.swing.JTextField medCo2;
    private javax.swing.JTextField medGroup;
    private javax.swing.JTextField medGroup1;
    private javax.swing.JTextField medGroup2;
    private javax.swing.JTextField medName;
    private javax.swing.JComboBox<String> medName1;
    private javax.swing.JComboBox<String> medName2;
    private javax.swing.JTextField medQuantity1;
    private javax.swing.JTextField medQuantity2;
    private javax.swing.JTextField medUnit;
    private javax.swing.JTextField medUnit1;
    private javax.swing.JTextField medUnit2;
    private javax.swing.JTextField mobNo;
    private javax.swing.JTextField mrpText;
    private javax.swing.JTextField mrpText1;
    private javax.swing.JTextArea orgAddr1;
    private javax.swing.JTextArea orgAddr2;
    private javax.swing.JLabel orgContact1;
    private javax.swing.JLabel orgContact2;
    private javax.swing.JLabel orgGST1;
    private javax.swing.JLabel orgGST2;
    private javax.swing.JLabel orgName1;
    private javax.swing.JLabel orgName2;
    private javax.swing.JComboBox<String> pMedFilter;
    private javax.swing.JButton printPurchaseGSTBtn;
    private javax.swing.JButton printSoldGSTBtn;
    private javax.swing.JTable purchaseGSTTable;
    private javax.swing.JTable purchaseMedTable;
    private javax.swing.JComboBox<String> sMedFilter;
    private javax.swing.JTextField searchAMedText;
    private javax.swing.JTextField searchDealerText;
    private javax.swing.JTextField searchEditorText;
    private javax.swing.JTextField searchPMedText;
    private javax.swing.JTextField searchSMedText2;
    private javax.swing.JLabel showCustBtn;
    private javax.swing.JLabel showDealerBtn;
    private javax.swing.JTable soldGSTTable;
    private javax.swing.JTable soldMedTable;
    private javax.swing.JButton submitPurchase;
    // End of variables declaration//GEN-END:variables
}
